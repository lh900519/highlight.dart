// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final cal = Mode(
    refs: {
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '5',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join(): Mode(
          className: "function",
          beginKeywords: "procedure",
          end: "[:;]",
          keywords: [
            'p',
            'r',
            'o',
            'c',
            'e',
            'd',
            'u',
            'r',
            'e',
            '|',
            '1',
            '0',
          ].join(),
          contains: [
            TITLE_MODE,
            Mode(
                className: "params",
                begin: "\\(",
                end: "\\)",
                keywords: [
                  'd',
                  'i',
                  'v',
                  ' ',
                  'm',
                  'o',
                  'd',
                  ' ',
                  'i',
                  'n',
                  ' ',
                  'a',
                  'n',
                  'd',
                  ' ',
                  'o',
                  'r',
                  ' ',
                  'n',
                  'o',
                  't',
                  ' ',
                  'x',
                  'o',
                  'r',
                  ' ',
                  'a',
                  's',
                  's',
                  'e',
                  'r',
                  't',
                  'e',
                  'r',
                  'r',
                  'o',
                  'r',
                  ' ',
                  'b',
                  'e',
                  'g',
                  'i',
                  'n',
                  ' ',
                  'c',
                  'a',
                  's',
                  'e',
                  ' ',
                  'd',
                  'o',
                  ' ',
                  'd',
                  'o',
                  'w',
                  'n',
                  't',
                  'o',
                  ' ',
                  'e',
                  'l',
                  's',
                  'e',
                  ' ',
                  'e',
                  'n',
                  'd',
                  ' ',
                  'e',
                  'x',
                  'i',
                  't',
                  ' ',
                  'f',
                  'o',
                  'r',
                  ' ',
                  'i',
                  'f',
                  ' ',
                  'o',
                  'f',
                  ' ',
                  'r',
                  'e',
                  'p',
                  'e',
                  'a',
                  't',
                  ' ',
                  't',
                  'h',
                  'e',
                  'n',
                  ' ',
                  't',
                  'o',
                  ' ',
                  'u',
                  'n',
                  't',
                  'i',
                  'l',
                  ' ',
                  'w',
                  'h',
                  'i',
                  'l',
                  'e',
                  ' ',
                  'w',
                  'i',
                  't',
                  'h',
                  ' ',
                  'v',
                  'a',
                  'r',
                ].join(),
                contains: [
                  Mode(
                      ref: [
                    '~',
                    'c',
                    'o',
                    'n',
                    't',
                    'a',
                    'i',
                    'n',
                    's',
                    '~',
                    '0',
                  ].join()),
                  Mode(
                      ref: [
                    '~',
                    'c',
                    'o',
                    'n',
                    't',
                    'a',
                    'i',
                    'n',
                    's',
                    '~',
                    '1',
                  ].join())
                ]),
            C_LINE_COMMENT_MODE,
            Mode(
                className: "comment",
                begin: "\\{",
                end: "\\}",
                contains: [
                  PHRASAL_WORDS_MODE,
                  Mode(
                      className: "doctag",
                      begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
                      relevance: 0)
                ],
                relevance: 0),
            Mode(
                className: "comment",
                begin: "\\(\\*",
                end: "\\*\\)",
                contains: [
                  PHRASAL_WORDS_MODE,
                  Mode(
                      className: "doctag",
                      begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
                      relevance: 0)
                ],
                relevance: 10)
          ]),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join(): Mode(className: "string", begin: "(#\\d+)+"),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join(): Mode(
          className: "string",
          begin: "'",
          end: "'",
          contains: [Mode(begin: "''")]),
    },
    case_insensitive: true,
    keywords: {
      "keyword":
          "asserterror and xor in if begin var exit else do for of mod repeat with then to div end or until case while not downto",
      "literal": "true false"
    },
    illegal: "\\/\\*",
    contains: [
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join()),
      Mode(
          className: "number",
          begin: "\\b\\d+(\\.\\d+)?(DT|D|T)",
          relevance: 0),
      Mode(className: "string", begin: "\"", end: "\""),
      NUMBER_MODE,
      Mode(
          className: "class",
          begin:
              "OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\d+) ([^\\r\\n]+)",
          returnBegin: true,
          contains: [
            TITLE_MODE,
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '5',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '1',
            ].join())
          ]),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '5',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join())
    ]);
