// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final zephir = Mode(
    refs: {
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '6',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '3',
      ].join(): Mode(variants: [BINARY_NUMBER_MODE, C_NUMBER_MODE]),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '6',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join(): Mode(className: "string", contains: [
        BACKSLASH_ESCAPE
      ], variants: [
        Mode(begin: "b\"", end: "\""),
        Mode(begin: "b'", end: "'"),
        Mode(
            className: "string",
            begin: "'",
            end: "'",
            illegal: null,
            contains: [BACKSLASH_ESCAPE]),
        Mode(
            className: "string",
            begin: "\"",
            end: "\"",
            illegal: null,
            contains: [BACKSLASH_ESCAPE])
      ]),
    },
    aliases: ["zep"],
    case_insensitive: true,
    keywords: [
      'a',
      'n',
      'd',
      ' ',
      'i',
      'n',
      'c',
      'l',
      'u',
      'd',
      'e',
      '_',
      'o',
      'n',
      'c',
      'e',
      ' ',
      'l',
      'i',
      's',
      't',
      ' ',
      'a',
      'b',
      's',
      't',
      'r',
      'a',
      'c',
      't',
      ' ',
      'g',
      'l',
      'o',
      'b',
      'a',
      'l',
      ' ',
      'p',
      'r',
      'i',
      'v',
      'a',
      't',
      'e',
      ' ',
      'e',
      'c',
      'h',
      'o',
      ' ',
      'i',
      'n',
      't',
      'e',
      'r',
      'f',
      'a',
      'c',
      'e',
      ' ',
      'a',
      's',
      ' ',
      's',
      't',
      'a',
      't',
      'i',
      'c',
      ' ',
      'e',
      'n',
      'd',
      's',
      'w',
      'i',
      't',
      'c',
      'h',
      ' ',
      'a',
      'r',
      'r',
      'a',
      'y',
      ' ',
      'n',
      'u',
      'l',
      'l',
      ' ',
      'i',
      'f',
      ' ',
      'e',
      'n',
      'd',
      'w',
      'h',
      'i',
      'l',
      'e',
      ' ',
      'o',
      'r',
      ' ',
      'c',
      'o',
      'n',
      's',
      't',
      ' ',
      'f',
      'o',
      'r',
      ' ',
      'e',
      'n',
      'd',
      'f',
      'o',
      'r',
      'e',
      'a',
      'c',
      'h',
      ' ',
      's',
      'e',
      'l',
      'f',
      ' ',
      'v',
      'a',
      'r',
      ' ',
      'l',
      'e',
      't',
      ' ',
      'w',
      'h',
      'i',
      'l',
      'e',
      ' ',
      'i',
      's',
      's',
      'e',
      't',
      ' ',
      'p',
      'u',
      'b',
      'l',
      'i',
      'c',
      ' ',
      'p',
      'r',
      'o',
      't',
      'e',
      'c',
      't',
      'e',
      'd',
      ' ',
      'e',
      'x',
      'i',
      't',
      ' ',
      'f',
      'o',
      'r',
      'e',
      'a',
      'c',
      'h',
      ' ',
      't',
      'h',
      'r',
      'o',
      'w',
      ' ',
      'e',
      'l',
      's',
      'e',
      'i',
      'f',
      ' ',
      'i',
      'n',
      'c',
      'l',
      'u',
      'd',
      'e',
      ' ',
      '_',
      '_',
      'F',
      'I',
      'L',
      'E',
      '_',
      '_',
      ' ',
      'e',
      'm',
      'p',
      't',
      'y',
      ' ',
      'r',
      'e',
      'q',
      'u',
      'i',
      'r',
      'e',
      '_',
      'o',
      'n',
      'c',
      'e',
      ' ',
      'd',
      'o',
      ' ',
      'x',
      'o',
      'r',
      ' ',
      'r',
      'e',
      't',
      'u',
      'r',
      'n',
      ' ',
      'p',
      'a',
      'r',
      'e',
      'n',
      't',
      ' ',
      'c',
      'l',
      'o',
      'n',
      'e',
      ' ',
      'u',
      's',
      'e',
      ' ',
      '_',
      '_',
      'C',
      'L',
      'A',
      'S',
      'S',
      '_',
      '_',
      ' ',
      '_',
      '_',
      'L',
      'I',
      'N',
      'E',
      '_',
      '_',
      ' ',
      'e',
      'l',
      's',
      'e',
      ' ',
      'b',
      'r',
      'e',
      'a',
      'k',
      ' ',
      'p',
      'r',
      'i',
      'n',
      't',
      ' ',
      'e',
      'v',
      'a',
      'l',
      ' ',
      'n',
      'e',
      'w',
      ' ',
      'c',
      'a',
      't',
      'c',
      'h',
      ' ',
      '_',
      '_',
      'M',
      'E',
      'T',
      'H',
      'O',
      'D',
      '_',
      '_',
      ' ',
      'c',
      'a',
      's',
      'e',
      ' ',
      'e',
      'x',
      'c',
      'e',
      'p',
      't',
      'i',
      'o',
      'n',
      ' ',
      'd',
      'e',
      'f',
      'a',
      'u',
      'l',
      't',
      ' ',
      'd',
      'i',
      'e',
      ' ',
      'r',
      'e',
      'q',
      'u',
      'i',
      'r',
      'e',
      ' ',
      '_',
      '_',
      'F',
      'U',
      'N',
      'C',
      'T',
      'I',
      'O',
      'N',
      '_',
      '_',
      ' ',
      'e',
      'n',
      'd',
      'd',
      'e',
      'c',
      'l',
      'a',
      'r',
      'e',
      ' ',
      'f',
      'i',
      'n',
      'a',
      'l',
      ' ',
      't',
      'r',
      'y',
      ' ',
      's',
      'w',
      'i',
      't',
      'c',
      'h',
      ' ',
      'c',
      'o',
      'n',
      't',
      'i',
      'n',
      'u',
      'e',
      ' ',
      'e',
      'n',
      'd',
      'f',
      'o',
      'r',
      ' ',
      'e',
      'n',
      'd',
      'i',
      'f',
      ' ',
      'd',
      'e',
      'c',
      'l',
      'a',
      'r',
      'e',
      ' ',
      'u',
      'n',
      's',
      'e',
      't',
      ' ',
      't',
      'r',
      'u',
      'e',
      ' ',
      'f',
      'a',
      'l',
      's',
      'e',
      ' ',
      't',
      'r',
      'a',
      'i',
      't',
      ' ',
      'g',
      'o',
      't',
      'o',
      ' ',
      'i',
      'n',
      's',
      't',
      'a',
      'n',
      'c',
      'e',
      'o',
      'f',
      ' ',
      'i',
      'n',
      's',
      't',
      'e',
      'a',
      'd',
      'o',
      'f',
      ' ',
      '_',
      '_',
      'D',
      'I',
      'R',
      '_',
      '_',
      ' ',
      '_',
      '_',
      'N',
      'A',
      'M',
      'E',
      'S',
      'P',
      'A',
      'C',
      'E',
      '_',
      '_',
      ' ',
      'y',
      'i',
      'e',
      'l',
      'd',
      ' ',
      'f',
      'i',
      'n',
      'a',
      'l',
      'l',
      'y',
      ' ',
      'i',
      'n',
      't',
      ' ',
      'u',
      'i',
      'n',
      't',
      ' ',
      'l',
      'o',
      'n',
      'g',
      ' ',
      'u',
      'l',
      'o',
      'n',
      'g',
      ' ',
      'c',
      'h',
      'a',
      'r',
      ' ',
      'u',
      'c',
      'h',
      'a',
      'r',
      ' ',
      'd',
      'o',
      'u',
      'b',
      'l',
      'e',
      ' ',
      'f',
      'l',
      'o',
      'a',
      't',
      ' ',
      'b',
      'o',
      'o',
      'l',
      ' ',
      'b',
      'o',
      'o',
      'l',
      'e',
      'a',
      'n',
      ' ',
      's',
      't',
      'r',
      'i',
      'n',
      'g',
      'l',
      'i',
      'k',
      'e',
      'l',
      'y',
      ' ',
      'u',
      'n',
      'l',
      'i',
      'k',
      'e',
      'l',
      'y',
    ].join(),
    contains: [
      C_LINE_COMMENT_MODE,
      HASH_COMMENT_MODE,
      Mode(className: "comment", begin: "/\\*", end: "\\*/", contains: [
        Mode(className: "doctag", begin: "@[A-Za-z]+"),
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ]),
      Mode(
          className: "comment",
          begin: "__halt_compiler.+?;",
          end: "false",
          contains: [
            PHRASAL_WORDS_MODE,
            Mode(
                className: "doctag",
                begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
                relevance: 0)
          ],
          endsWithParent: true,
          keywords: [
            '_',
            '_',
            'h',
            'a',
            'l',
            't',
            '_',
            'c',
            'o',
            'm',
            'p',
            'i',
            'l',
            'e',
            'r',
          ].join(),
          lexemes: "[a-zA-Z_]\\w*"),
      Mode(
          className: "string",
          begin: "<<<['\"]?\\w+['\"]?\$",
          end: "^\\w+;",
          contains: [BACKSLASH_ESCAPE]),
      Mode(begin: "(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*"),
      Mode(
          className: "function",
          beginKeywords: "function",
          end: "[;{]",
          excludeEnd: true,
          illegal: "\\\$|\\[|%",
          contains: [
            UNDERSCORE_TITLE_MODE,
            Mode(className: "params", begin: "\\(", end: "\\)", contains: [
              Mode(self: true),
              C_BLOCK_COMMENT_MODE,
              Mode(
                  ref: [
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '6',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '1',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '2',
              ].join()),
              Mode(
                  ref: [
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '6',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '1',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '3',
              ].join())
            ])
          ]),
      Mode(
          className: "class",
          beginKeywords: "class interface",
          end: "{",
          excludeEnd: true,
          illegal: "[:\\(\\\$\"]",
          contains: [
            Mode(beginKeywords: "extends implements"),
            UNDERSCORE_TITLE_MODE
          ]),
      Mode(
          beginKeywords: "namespace",
          end: ";",
          illegal: "[\\.']",
          contains: [UNDERSCORE_TITLE_MODE]),
      Mode(beginKeywords: "use", end: ";", contains: [UNDERSCORE_TITLE_MODE]),
      Mode(begin: "=>"),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '6',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '6',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '3',
      ].join())
    ]);
