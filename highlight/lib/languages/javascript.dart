// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final javascript = Mode(refs: {
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '5',
  ].join(): Mode(
      className: "number",
      variants: [
        Mode(begin: "\\b(0[bB][01]+)n?"),
        Mode(begin: "\\b(0[oO][0-7]+)n?"),
        Mode(
            begin:
                "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)n?")
      ],
      relevance: 0),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
  ].join(): Mode(className: "string", begin: "`", end: "`", contains: [
    BACKSLASH_ESCAPE,
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      's',
      't',
      'a',
      'r',
      't',
      's',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
    ].join())
  ]),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
  ].join(): Mode(
      begin: "css`",
      end: "",
      starts: Mode(end: "`", returnEnd: false, contains: [
        BACKSLASH_ESCAPE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
          '~',
          's',
          't',
          'a',
          'r',
          't',
          's',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
        ].join())
      ], subLanguage: [
        "css"
      ])),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
  ].join(): Mode(className: "subst", begin: "\\\$\\{", end: "\\}", keywords: {
    "keyword":
        "if break with typeof try else new default const this function for continue delete catch do from var export of throw yield finally void switch return case await import instanceof debugger static let async as in as while super",
    "literal": "true NaN Infinity false null undefined",
    "built_in":
        "console parseInt URIError Array Uint8ClampedArray isFinite eval Math StopIteration String Intl ArrayBuffer WeakSet SyntaxError Object RegExp Proxy Date DataView parseFloat ReferenceError encodeURI Float32Array Number Promise Set Float64Array Int16Array isNaN unescape Uint16Array JSON Boolean Uint8Array arguments TypeError decodeURIComponent InternalError document Uint32Array window Reflect Map Function RangeError WeakMap Symbol escape encodeURIComponent Int32Array Int8Array Error module EvalError decodeURI require"
  }, contains: [
    APOS_STRING_MODE,
    QUOTE_STRING_MODE,
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      's',
      't',
      'a',
      'r',
      't',
      's',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      's',
      't',
      'a',
      'r',
      't',
      's',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      's',
      't',
      'a',
      'r',
      't',
      's',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '5',
    ].join()),
    REGEXP_MODE
  ]),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
  ].join(): Mode(
      begin: "html`",
      end: "",
      starts: Mode(end: "`", returnEnd: false, contains: [
        BACKSLASH_ESCAPE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
          '~',
          's',
          't',
          'a',
          'r',
          't',
          's',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
        ].join())
      ], subLanguage: [
        "xml"
      ])),
}, aliases: [
  "js",
  "jsx",
  "mjs",
  "cjs"
], keywords: {
  "keyword":
      "else if try while switch with default debugger void continue instanceof new let for export as super delete import var finally yield as async return typeof throw function static break await catch of from do this in const case",
  "literal": "true Infinity null undefined NaN false",
  "built_in":
      "DataView EvalError encodeURI RangeError ArrayBuffer parseFloat decodeURI Int8Array Function encodeURIComponent Uint8Array Int32Array eval Date RegExp SyntaxError parseInt isNaN Set decodeURIComponent module Float64Array Math StopIteration TypeError String URIError WeakMap Float32Array document arguments Boolean Proxy ReferenceError InternalError Array Uint32Array Object Reflect Uint16Array escape Uint8ClampedArray console Symbol Map WeakSet require Intl Int16Array Promise JSON Number unescape window Error isFinite"
}, contains: [
  Mode(
      className: "meta",
      relevance: 10,
      begin: "^\\s*['\"]use (strict|asm)['\"]"),
  Mode(className: "meta", begin: "^#!", end: "\$"),
  APOS_STRING_MODE,
  QUOTE_STRING_MODE,
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
  ].join()),
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
  ].join()),
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
  ].join()),
  C_LINE_COMMENT_MODE,
  Mode(
      className: "comment",
      begin: "/\\*\\*",
      end: "\\*/",
      contains: [
        Mode(className: "doctag", begin: "@[A-Za-z]+", contains: [
          Mode(className: "type", begin: "\\{", end: "\\}", relevance: 0),
          Mode(
              className: "variable",
              begin: "[A-Za-z\$_][0-9A-Za-z\$_]*(?=\\s*(-)|\$)",
              endsParent: true,
              relevance: 0),
          Mode(begin: "(?=[^\\n])\\s", relevance: 0)
        ]),
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ],
      relevance: 0),
  C_BLOCK_COMMENT_MODE,
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '5',
  ].join()),
  Mode(begin: "[{,\\n]\\s*", relevance: 0, contains: [
    Mode(
        begin: "[A-Za-z\$_][0-9A-Za-z\$_]*\\s*:",
        returnBegin: true,
        relevance: 0,
        contains: [
          Mode(
              className: "attr",
              begin: "[A-Za-z\$_][0-9A-Za-z\$_]*",
              relevance: 0)
        ])
  ]),
  Mode(
      begin:
          "(!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||\\x7e|\\b(case|return|throw)\\b)\\s*",
      keywords: [
        'r',
        'e',
        't',
        'u',
        'r',
        'n',
        ' ',
        't',
        'h',
        'r',
        'o',
        'w',
        ' ',
        'c',
        'a',
        's',
        'e',
      ].join(),
      contains: [
        C_LINE_COMMENT_MODE,
        C_BLOCK_COMMENT_MODE,
        REGEXP_MODE,
        Mode(
            className: "function",
            begin: "(\\(.*?\\)|[A-Za-z\$_][0-9A-Za-z\$_]*)\\s*=>",
            returnBegin: true,
            end: "\\s*=>",
            contains: [
              Mode(className: "params", variants: [
                Mode(begin: "[A-Za-z\$_][0-9A-Za-z\$_]*"),
                Mode(begin: "\\(\\s*\\)"),
                Mode(
                    begin: "\\(",
                    end: "\\)",
                    excludeBegin: true,
                    excludeEnd: true,
                    keywords: {
                      "keyword":
                          "export var of continue import await yield in return function void finally throw case break debugger from try default as const if as while let static typeof switch else super new instanceof async with for do this catch delete",
                      "literal": "true null false Infinity undefined NaN",
                      "built_in":
                          "StopIteration isFinite parseFloat escape decodeURIComponent Float64Array EvalError String Number Uint8Array Array Proxy decodeURI Intl parseInt Boolean Int16Array document Promise Set require ReferenceError Reflect encodeURIComponent Date SyntaxError eval encodeURI window Uint32Array JSON RangeError Int32Array Error URIError WeakMap InternalError TypeError Function unescape Uint16Array isNaN DataView console Uint8ClampedArray Map Int8Array Math arguments ArrayBuffer WeakSet Float32Array Object module RegExp Symbol"
                    },
                    contains: [
                      APOS_STRING_MODE,
                      QUOTE_STRING_MODE,
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '4',
                      ].join()),
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '4',
                        '~',
                        's',
                        't',
                        'a',
                        'r',
                        't',
                        's',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '1',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '3',
                      ].join()),
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '4',
                        '~',
                        's',
                        't',
                        'a',
                        'r',
                        't',
                        's',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '1',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '4',
                      ].join()),
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '4',
                        '~',
                        's',
                        't',
                        'a',
                        'r',
                        't',
                        's',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '1',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '5',
                      ].join()),
                      REGEXP_MODE,
                      C_BLOCK_COMMENT_MODE,
                      C_LINE_COMMENT_MODE
                    ])
              ])
            ]),
        Mode(className: "", begin: "\\s", end: "\\s*", skip: true),
        Mode(variants: [
          Mode(begin: "<>", end: "</>"),
          Mode(
              begin: "<[A-Za-z0-9\\\\._:-]+",
              end: "\\/[A-Za-z0-9\\\\._:-]+>|\\/>")
        ], subLanguage: [
          "xml"
        ], contains: [
          Mode(
              begin: "<[A-Za-z0-9\\\\._:-]+",
              end: "\\/[A-Za-z0-9\\\\._:-]+>|\\/>",
              skip: true,
              contains: [Mode(self: true)])
        ])
      ],
      relevance: 0),
  Mode(
      className: "function",
      beginKeywords: "function",
      end: "\\{",
      excludeEnd: true,
      contains: [
        Mode(
            className: "title",
            begin: "[A-Za-z\$_][0-9A-Za-z\$_]*",
            relevance: 0),
        Mode(
            className: "params",
            begin: "\\(",
            end: "\\)",
            excludeBegin: true,
            excludeEnd: true,
            contains: [
              APOS_STRING_MODE,
              QUOTE_STRING_MODE,
              Mode(
                  ref: [
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '4',
              ].join()),
              Mode(
                  ref: [
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '4',
                '~',
                's',
                't',
                'a',
                'r',
                't',
                's',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '1',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '3',
              ].join()),
              Mode(
                  ref: [
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '4',
                '~',
                's',
                't',
                'a',
                'r',
                't',
                's',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '1',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '4',
              ].join()),
              Mode(
                  ref: [
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '4',
                '~',
                's',
                't',
                'a',
                'r',
                't',
                's',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '1',
                '~',
                'c',
                'o',
                'n',
                't',
                'a',
                'i',
                'n',
                's',
                '~',
                '5',
              ].join()),
              REGEXP_MODE,
              C_BLOCK_COMMENT_MODE,
              C_LINE_COMMENT_MODE
            ])
      ],
      illegal: "\\[|%"),
  Mode(begin: "\\\$[(.]"),
  METHOD_GUARD,
  Mode(
      className: "class",
      beginKeywords: "class",
      end: "[{;=]",
      excludeEnd: true,
      illegal: "[:\"\\[\\]]",
      contains: [Mode(beginKeywords: "extends"), UNDERSCORE_TITLE_MODE]),
  Mode(beginKeywords: "constructor get set", end: "\\{", excludeEnd: true)
], illegal: "#(?!!)");
