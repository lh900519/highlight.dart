// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final fsharp = Mode(
    refs: {},
    aliases: ["fs"],
    keywords: [
      'a',
      'b',
      's',
      't',
      'r',
      'a',
      'c',
      't',
      ' ',
      'a',
      'n',
      'd',
      ' ',
      'a',
      's',
      ' ',
      'a',
      's',
      's',
      'e',
      'r',
      't',
      ' ',
      'b',
      'a',
      's',
      'e',
      ' ',
      'b',
      'e',
      'g',
      'i',
      'n',
      ' ',
      'c',
      'l',
      'a',
      's',
      's',
      ' ',
      'd',
      'e',
      'f',
      'a',
      'u',
      'l',
      't',
      ' ',
      'd',
      'e',
      'l',
      'e',
      'g',
      'a',
      't',
      'e',
      ' ',
      'd',
      'o',
      ' ',
      'd',
      'o',
      'n',
      'e',
      ' ',
      'd',
      'o',
      'w',
      'n',
      'c',
      'a',
      's',
      't',
      ' ',
      'd',
      'o',
      'w',
      'n',
      't',
      'o',
      ' ',
      'e',
      'l',
      'i',
      'f',
      ' ',
      'e',
      'l',
      's',
      'e',
      ' ',
      'e',
      'n',
      'd',
      ' ',
      'e',
      'x',
      'c',
      'e',
      'p',
      't',
      'i',
      'o',
      'n',
      ' ',
      'e',
      'x',
      't',
      'e',
      'r',
      'n',
      ' ',
      'f',
      'a',
      'l',
      's',
      'e',
      ' ',
      'f',
      'i',
      'n',
      'a',
      'l',
      'l',
      'y',
      ' ',
      'f',
      'o',
      'r',
      ' ',
      'f',
      'u',
      'n',
      ' ',
      'f',
      'u',
      'n',
      'c',
      't',
      'i',
      'o',
      'n',
      ' ',
      'g',
      'l',
      'o',
      'b',
      'a',
      'l',
      ' ',
      'i',
      'f',
      ' ',
      'i',
      'n',
      ' ',
      'i',
      'n',
      'h',
      'e',
      'r',
      'i',
      't',
      ' ',
      'i',
      'n',
      'l',
      'i',
      'n',
      'e',
      ' ',
      'i',
      'n',
      't',
      'e',
      'r',
      'f',
      'a',
      'c',
      'e',
      ' ',
      'i',
      'n',
      't',
      'e',
      'r',
      'n',
      'a',
      'l',
      ' ',
      'l',
      'a',
      'z',
      'y',
      ' ',
      'l',
      'e',
      't',
      ' ',
      'm',
      'a',
      't',
      'c',
      'h',
      ' ',
      'm',
      'e',
      'm',
      'b',
      'e',
      'r',
      ' ',
      'm',
      'o',
      'd',
      'u',
      'l',
      'e',
      ' ',
      'm',
      'u',
      't',
      'a',
      'b',
      'l',
      'e',
      ' ',
      'n',
      'a',
      'm',
      'e',
      's',
      'p',
      'a',
      'c',
      'e',
      ' ',
      'n',
      'e',
      'w',
      ' ',
      'n',
      'u',
      'l',
      'l',
      ' ',
      'o',
      'f',
      ' ',
      'o',
      'p',
      'e',
      'n',
      ' ',
      'o',
      'r',
      ' ',
      'o',
      'v',
      'e',
      'r',
      'r',
      'i',
      'd',
      'e',
      ' ',
      'p',
      'r',
      'i',
      'v',
      'a',
      't',
      'e',
      ' ',
      'p',
      'u',
      'b',
      'l',
      'i',
      'c',
      ' ',
      'r',
      'e',
      'c',
      ' ',
      'r',
      'e',
      't',
      'u',
      'r',
      'n',
      ' ',
      's',
      'i',
      'g',
      ' ',
      's',
      't',
      'a',
      't',
      'i',
      'c',
      ' ',
      's',
      't',
      'r',
      'u',
      'c',
      't',
      ' ',
      't',
      'h',
      'e',
      'n',
      ' ',
      't',
      'o',
      ' ',
      't',
      'r',
      'u',
      'e',
      ' ',
      't',
      'r',
      'y',
      ' ',
      't',
      'y',
      'p',
      'e',
      ' ',
      'u',
      'p',
      'c',
      'a',
      's',
      't',
      ' ',
      'u',
      's',
      'e',
      ' ',
      'v',
      'a',
      'l',
      ' ',
      'v',
      'o',
      'i',
      'd',
      ' ',
      'w',
      'h',
      'e',
      'n',
      ' ',
      'w',
      'h',
      'i',
      'l',
      'e',
      ' ',
      'w',
      'i',
      't',
      'h',
      ' ',
      'y',
      'i',
      'e',
      'l',
      'd',
    ].join(),
    illegal: "\\/\\*",
    contains: [
      Mode(className: "keyword", begin: "\\b(yield|return|let|do)!"),
      Mode(
          className: "string",
          begin: "@\"",
          end: "\"",
          contains: [Mode(begin: "\"\"")]),
      Mode(className: "string", begin: "\"\"\"", end: "\"\"\""),
      Mode(className: "comment", begin: "\\(\\*", end: "\\*\\)", contains: [
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ]),
      Mode(
          className: "class",
          beginKeywords: "type",
          end: "\\(|=|\$",
          excludeEnd: true,
          contains: [
            UNDERSCORE_TITLE_MODE,
            Mode(begin: "<", end: ">", contains: [
              Mode(className: "title", begin: "'[a-zA-Z0-9_]+", relevance: 0)
            ])
          ]),
      Mode(className: "meta", begin: "\\[<", end: ">\\]", relevance: 10),
      Mode(
          className: "symbol",
          begin: "\\B('[A-Za-z])\\b",
          contains: [BACKSLASH_ESCAPE]),
      C_LINE_COMMENT_MODE,
      Mode(
          className: "string",
          begin: "\"",
          end: "\"",
          illegal: null,
          contains: [BACKSLASH_ESCAPE]),
      C_NUMBER_MODE
    ]);
