// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final typescript = Mode(refs: {
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '5',
  ].join(): Mode(
      className: "number",
      variants: [
        Mode(begin: "\\b(0[bB][01]+)n?"),
        Mode(begin: "\\b(0[oO][0-7]+)n?"),
        Mode(
            begin:
                "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)n?")
      ],
      relevance: 0),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
  ].join(): Mode(className: "string", begin: "`", end: "`", contains: [
    BACKSLASH_ESCAPE,
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
      '~',
      's',
      't',
      'a',
      'r',
      't',
      's',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
    ].join())
  ]),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
  ].join(): Mode(
      begin: "css`",
      end: "",
      starts: Mode(end: "`", returnEnd: false, contains: [
        BACKSLASH_ESCAPE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '3',
          '~',
          's',
          't',
          'a',
          'r',
          't',
          's',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
        ].join())
      ], subLanguage: [
        "css"
      ])),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
  ].join(): Mode(className: "subst", begin: "\\\$\\{", end: "\\}", keywords: {
    "keyword": [
      'in',
      'if',
      'for',
      'while',
      'finally',
      'var',
      'new',
      'function',
      'do',
      'return',
      'void',
      'else',
      'break',
      'catch',
      'instanceof',
      'with',
      'throw',
      'case',
      'default',
      'try',
      'this',
      'switch',
      'continue',
      'typeof',
      'delete',
      'let',
      'yield',
      'const',
      'class',
      'public',
      'private',
      'protected',
      'get',
      'set',
      'super',
      'static',
      'implements',
      'enum',
      'export',
      'import',
      'declare',
      'type',
      'namespace',
      'abstract',
      'as',
      'from',
      'extends',
      'async',
      'await',
    ].join(),
    "literal": [
      'true',
      'false',
      'null',
      'undefined',
      'NaN',
      'Infinity',
    ].join(),
    "built_in": [
      'eval',
      'isFinite',
      'isNaN',
      'parseFloat',
      'parseInt',
      'decodeURI',
      'decodeURIComponent',
      'encodeURI',
      'encodeURIComponent',
      'escape',
      'unescape',
      'Object',
      'Function',
      'Boolean',
      'Error',
      'EvalError',
      'InternalError',
      'RangeError',
      'ReferenceError',
      'StopIteration',
      'SyntaxError',
      'TypeError',
      'URIError',
      'Number',
      'Math',
      'Date',
      'String',
      'RegExp',
      'Array',
      'Float32Array',
      'Float64Array',
      'Int16Array',
      'Int32Array',
      'Int8Array',
      'Uint16Array',
      'Uint32Array',
      'Uint8Array',
      'Uint8ClampedArray',
      'ArrayBuffer',
      'DataView',
      'JSON',
      'Intl',
      'arguments',
      'require',
      'module',
      'console',
      'window',
      'document',
      'any',
      'number',
      'boolean',
      'string',
      'void',
      'Promise',
    ].join()
  }, contains: [
    APOS_STRING_MODE,
    QUOTE_STRING_MODE,
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
      '~',
      's',
      't',
      'a',
      'r',
      't',
      's',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
      '~',
      's',
      't',
      'a',
      'r',
      't',
      's',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
      '~',
      's',
      't',
      'a',
      'r',
      't',
      's',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '5',
    ].join()),
    REGEXP_MODE
  ]),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
  ].join(): Mode(
      begin: "html`",
      end: "",
      starts: Mode(end: "`", returnEnd: false, contains: [
        BACKSLASH_ESCAPE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '3',
          '~',
          's',
          't',
          'a',
          'r',
          't',
          's',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
        ].join())
      ], subLanguage: [
        "xml"
      ])),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '0',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '2',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
  ].join(): Mode(begin: "\\(", end: "\\)", keywords: {
    "keyword": [
      'in',
      'if',
      'for',
      'while',
      'finally',
      'var',
      'new',
      'function',
      'do',
      'return',
      'void',
      'else',
      'break',
      'catch',
      'instanceof',
      'with',
      'throw',
      'case',
      'default',
      'try',
      'this',
      'switch',
      'continue',
      'typeof',
      'delete',
      'let',
      'yield',
      'const',
      'class',
      'public',
      'private',
      'protected',
      'get',
      'set',
      'super',
      'static',
      'implements',
      'enum',
      'export',
      'import',
      'declare',
      'type',
      'namespace',
      'abstract',
      'as',
      'from',
      'extends',
      'async',
      'await',
    ].join(),
    "literal": [
      'true',
      'false',
      'null',
      'undefined',
      'NaN',
      'Infinity',
    ].join(),
    "built_in": [
      'eval',
      'isFinite',
      'isNaN',
      'parseFloat',
      'parseInt',
      'decodeURI',
      'decodeURIComponent',
      'encodeURI',
      'encodeURIComponent',
      'escape',
      'unescape',
      'Object',
      'Function',
      'Boolean',
      'Error',
      'EvalError',
      'InternalError',
      'RangeError',
      'ReferenceError',
      'StopIteration',
      'SyntaxError',
      'TypeError',
      'URIError',
      'Number',
      'Math',
      'Date',
      'String',
      'RegExp',
      'Array',
      'Float32Array',
      'Float64Array',
      'Int16Array',
      'Int32Array',
      'Int8Array',
      'Uint16Array',
      'Uint32Array',
      'Uint8Array',
      'Uint8ClampedArray',
      'ArrayBuffer',
      'DataView',
      'JSON',
      'Intl',
      'arguments',
      'require',
      'module',
      'console',
      'window',
      'document',
      'any',
      'number',
      'boolean',
      'string',
      'void',
      'Promise',
    ].join()
  }, contains: [
    Mode(self: true),
    QUOTE_STRING_MODE,
    APOS_STRING_MODE,
    NUMBER_MODE
  ]),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '0',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '2',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '2',
  ].join(): Mode(className: "meta", begin: "@[A-Za-z\$_][0-9A-Za-z\$_]*"),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '0',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '2',
  ].join(): Mode(
      className: "params",
      begin: "\\(",
      end: "\\)",
      excludeBegin: true,
      excludeEnd: true,
      keywords: {
        "keyword": [
          'in',
          'if',
          'for',
          'while',
          'finally',
          'var',
          'new',
          'function',
          'do',
          'return',
          'void',
          'else',
          'break',
          'catch',
          'instanceof',
          'with',
          'throw',
          'case',
          'default',
          'try',
          'this',
          'switch',
          'continue',
          'typeof',
          'delete',
          'let',
          'yield',
          'const',
          'class',
          'public',
          'private',
          'protected',
          'get',
          'set',
          'super',
          'static',
          'implements',
          'enum',
          'export',
          'import',
          'declare',
          'type',
          'namespace',
          'abstract',
          'as',
          'from',
          'extends',
          'async',
          'await',
        ].join(),
        "literal": [
          'true',
          'false',
          'null',
          'undefined',
          'NaN',
          'Infinity',
        ].join(),
        "built_in": [
          'eval',
          'isFinite',
          'isNaN',
          'parseFloat',
          'parseInt',
          'decodeURI',
          'decodeURIComponent',
          'encodeURI',
          'encodeURIComponent',
          'escape',
          'unescape',
          'Object',
          'Function',
          'Boolean',
          'Error',
          'EvalError',
          'InternalError',
          'RangeError',
          'ReferenceError',
          'StopIteration',
          'SyntaxError',
          'TypeError',
          'URIError',
          'Number',
          'Math',
          'Date',
          'String',
          'RegExp',
          'Array',
          'Float32Array',
          'Float64Array',
          'Int16Array',
          'Int32Array',
          'Int8Array',
          'Uint16Array',
          'Uint32Array',
          'Uint8Array',
          'Uint8ClampedArray',
          'ArrayBuffer',
          'DataView',
          'JSON',
          'Intl',
          'arguments',
          'require',
          'module',
          'console',
          'window',
          'document',
          'any',
          'number',
          'boolean',
          'string',
          'void',
          'Promise',
        ].join()
      },
      contains: [
        C_LINE_COMMENT_MODE,
        C_BLOCK_COMMENT_MODE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '3',
        ].join())
      ]),
}, aliases: [
  "ts"
], keywords: {
  "keyword": [
    'in',
    'if',
    'for',
    'while',
    'finally',
    'var',
    'new',
    'function',
    'do',
    'return',
    'void',
    'else',
    'break',
    'catch',
    'instanceof',
    'with',
    'throw',
    'case',
    'default',
    'try',
    'this',
    'switch',
    'continue',
    'typeof',
    'delete',
    'let',
    'yield',
    'const',
    'class',
    'public',
    'private',
    'protected',
    'get',
    'set',
    'super',
    'static',
    'implements',
    'enum',
    'export',
    'import',
    'declare',
    'type',
    'namespace',
    'abstract',
    'as',
    'from',
    'extends',
    'async',
    'await',
  ].join(),
  "literal": [
    'true',
    'false',
    'null',
    'undefined',
    'NaN',
    'Infinity',
  ].join(),
  "built_in": [
    'eval',
    'isFinite',
    'isNaN',
    'parseFloat',
    'parseInt',
    'decodeURI',
    'decodeURIComponent',
    'encodeURI',
    'encodeURIComponent',
    'escape',
    'unescape',
    'Object',
    'Function',
    'Boolean',
    'Error',
    'EvalError',
    'InternalError',
    'RangeError',
    'ReferenceError',
    'StopIteration',
    'SyntaxError',
    'TypeError',
    'URIError',
    'Number',
    'Math',
    'Date',
    'String',
    'RegExp',
    'Array',
    'Float32Array',
    'Float64Array',
    'Int16Array',
    'Int32Array',
    'Int8Array',
    'Uint16Array',
    'Uint32Array',
    'Uint8Array',
    'Uint8ClampedArray',
    'ArrayBuffer',
    'DataView',
    'JSON',
    'Intl',
    'arguments',
    'require',
    'module',
    'console',
    'window',
    'document',
    'any',
    'number',
    'boolean',
    'string',
    'void',
    'Promise',
  ].join()
}, contains: [
  Mode(className: "meta", begin: "^\\s*['\"]use strict['\"]"),
  APOS_STRING_MODE,
  QUOTE_STRING_MODE,
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
  ].join()),
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
  ].join()),
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '4',
  ].join()),
  C_LINE_COMMENT_MODE,
  C_BLOCK_COMMENT_MODE,
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
    '~',
    's',
    't',
    'a',
    'r',
    't',
    's',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '5',
  ].join()),
  Mode(
      begin:
          "(!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||\\x7e|\\b(case|return|throw)\\b)\\s*",
      keywords: [
        'r',
        'e',
        't',
        'u',
        'r',
        'n',
        ' ',
        't',
        'h',
        'r',
        'o',
        'w',
        ' ',
        'c',
        'a',
        's',
        'e',
      ].join(),
      contains: [
        C_LINE_COMMENT_MODE,
        C_BLOCK_COMMENT_MODE,
        REGEXP_MODE,
        Mode(
            className: "function",
            begin: "(\\(.*?\\)|[a-zA-Z]\\w*)\\s*=>",
            returnBegin: true,
            end: "\\s*=>",
            contains: [
              Mode(className: "params", variants: [
                Mode(begin: "[a-zA-Z]\\w*"),
                Mode(begin: "\\(\\s*\\)"),
                Mode(
                    begin: "\\(",
                    end: "\\)",
                    excludeBegin: true,
                    excludeEnd: true,
                    keywords: {
                      "keyword": [
                        'in',
                        'if',
                        'for',
                        'while',
                        'finally',
                        'var',
                        'new',
                        'function',
                        'do',
                        'return',
                        'void',
                        'else',
                        'break',
                        'catch',
                        'instanceof',
                        'with',
                        'throw',
                        'case',
                        'default',
                        'try',
                        'this',
                        'switch',
                        'continue',
                        'typeof',
                        'delete',
                        'let',
                        'yield',
                        'const',
                        'class',
                        'public',
                        'private',
                        'protected',
                        'get',
                        'set',
                        'super',
                        'static',
                        'implements',
                        'enum',
                        'export',
                        'import',
                        'declare',
                        'type',
                        'namespace',
                        'abstract',
                        'as',
                        'from',
                        'extends',
                        'async',
                        'await',
                      ].join(),
                      "literal": [
                        'true',
                        'false',
                        'null',
                        'undefined',
                        'NaN',
                        'Infinity',
                      ].join(),
                      "built_in": [
                        'eval',
                        'isFinite',
                        'isNaN',
                        'parseFloat',
                        'parseInt',
                        'decodeURI',
                        'decodeURIComponent',
                        'encodeURI',
                        'encodeURIComponent',
                        'escape',
                        'unescape',
                        'Object',
                        'Function',
                        'Boolean',
                        'Error',
                        'EvalError',
                        'InternalError',
                        'RangeError',
                        'ReferenceError',
                        'StopIteration',
                        'SyntaxError',
                        'TypeError',
                        'URIError',
                        'Number',
                        'Math',
                        'Date',
                        'String',
                        'RegExp',
                        'Array',
                        'Float32Array',
                        'Float64Array',
                        'Int16Array',
                        'Int32Array',
                        'Int8Array',
                        'Uint16Array',
                        'Uint32Array',
                        'Uint8Array',
                        'Uint8ClampedArray',
                        'ArrayBuffer',
                        'DataView',
                        'JSON',
                        'Intl',
                        'arguments',
                        'require',
                        'module',
                        'console',
                        'window',
                        'document',
                        'any',
                        'number',
                        'boolean',
                        'string',
                        'void',
                        'Promise',
                      ].join()
                    },
                    contains: [
                      Mode(self: true),
                      C_LINE_COMMENT_MODE,
                      C_BLOCK_COMMENT_MODE
                    ])
              ])
            ])
      ],
      relevance: 0),
  Mode(
      className: "function",
      beginKeywords: "function",
      end: "[\\{;]",
      excludeEnd: true,
      keywords: {
        "keyword": [
          'in',
          'if',
          'for',
          'while',
          'finally',
          'var',
          'new',
          'function',
          'do',
          'return',
          'void',
          'else',
          'break',
          'catch',
          'instanceof',
          'with',
          'throw',
          'case',
          'default',
          'try',
          'this',
          'switch',
          'continue',
          'typeof',
          'delete',
          'let',
          'yield',
          'const',
          'class',
          'public',
          'private',
          'protected',
          'get',
          'set',
          'super',
          'static',
          'implements',
          'enum',
          'export',
          'import',
          'declare',
          'type',
          'namespace',
          'abstract',
          'as',
          'from',
          'extends',
          'async',
          'await',
        ].join(),
        "literal": [
          'true',
          'false',
          'null',
          'undefined',
          'NaN',
          'Infinity',
        ].join(),
        "built_in": [
          'eval',
          'isFinite',
          'isNaN',
          'parseFloat',
          'parseInt',
          'decodeURI',
          'decodeURIComponent',
          'encodeURI',
          'encodeURIComponent',
          'escape',
          'unescape',
          'Object',
          'Function',
          'Boolean',
          'Error',
          'EvalError',
          'InternalError',
          'RangeError',
          'ReferenceError',
          'StopIteration',
          'SyntaxError',
          'TypeError',
          'URIError',
          'Number',
          'Math',
          'Date',
          'String',
          'RegExp',
          'Array',
          'Float32Array',
          'Float64Array',
          'Int16Array',
          'Int32Array',
          'Int8Array',
          'Uint16Array',
          'Uint32Array',
          'Uint8Array',
          'Uint8ClampedArray',
          'ArrayBuffer',
          'DataView',
          'JSON',
          'Intl',
          'arguments',
          'require',
          'module',
          'console',
          'window',
          'document',
          'any',
          'number',
          'boolean',
          'string',
          'void',
          'Promise',
        ].join()
      },
      contains: [
        Mode(self: true),
        Mode(
            className: "title",
            begin: "[A-Za-z\$_][0-9A-Za-z\$_]*",
            relevance: 0),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
        ].join())
      ],
      illegal: "%",
      relevance: 0),
  Mode(
      beginKeywords: "constructor",
      end: "[\\{;]",
      excludeEnd: true,
      contains: [
        Mode(self: true),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
        ].join())
      ]),
  Mode(
      begin: "module\\.",
      keywords: {
        "built_in": [
          'module',
        ].join()
      },
      relevance: 0),
  Mode(beginKeywords: "module", end: "\\{", excludeEnd: true),
  Mode(
      beginKeywords: "interface",
      end: "\\{",
      excludeEnd: true,
      keywords: [
        'i',
        'n',
        't',
        'e',
        'r',
        'f',
        'a',
        'c',
        'e',
        ' ',
        'e',
        'x',
        't',
        'e',
        'n',
        'd',
        's',
      ].join()),
  Mode(begin: "\\\$[(.]"),
  Mode(begin: "\\.[a-zA-Z]\\w*", relevance: 0),
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '0',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '2',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '2',
  ].join()),
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
    '0',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '2',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '3',
  ].join())
]);
