// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final handlebars = Mode(
    refs: {
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '7',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join(): Mode(
          begin: "\".*?\"|'.*?'|\\[.*?\\]|\\w+",
          keywords: {
            "builtin-name":
                "each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup"
          },
          starts: Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '4',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
            '~',
            's',
            't',
            'a',
            'r',
            't',
            's',
          ].join()),
          relevance: 0),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        's',
        't',
        'a',
        'r',
        't',
        's',
      ].join(): Mode(endsWithParent: true, relevance: 0, contains: [
        Mode(begin: "\".*?\"|'.*?'|\\[.*?\\]|\\w+", relevance: 0)
      ]),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join(): Mode(
          begin: "\".*?\"|'.*?'|\\[.*?\\]|\\w+",
          keywords: {
            "builtin-name":
                "each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup"
          },
          starts: Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '4',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
            '~',
            's',
            't',
            'a',
            'r',
            't',
            's',
          ].join()),
          className: "name"),
    },
    aliases: ["hbs", "html.hbs", "html.handlebars"],
    case_insensitive: true,
    subLanguage: ["xml"],
    contains: [
      Mode(begin: "\\\\\\{\\{", skip: true),
      Mode(begin: "\\\\\\\\(?=\\{\\{)", skip: true),
      Mode(
          className: "comment",
          begin: "\\{\\{!--",
          end: "--\\}\\}",
          contains: [
            PHRASAL_WORDS_MODE,
            Mode(
                className: "doctag",
                begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
                relevance: 0)
          ]),
      Mode(className: "comment", begin: "\\{\\{!", end: "\\}\\}", contains: [
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ]),
      Mode(
          className: "template-tag",
          begin: "\\{\\{\\{\\{(?!\\/)",
          end: "\\}\\}\\}\\}",
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '4',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join())
          ],
          starts: Mode(
              end: "\\{\\{\\{\\{\\/", returnEnd: true, subLanguage: ["xml"])),
      Mode(
          className: "template-tag",
          begin: "\\{\\{\\{\\{\\/",
          end: "\\}\\}\\}\\}",
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '4',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join())
          ]),
      Mode(
          className: "template-tag",
          begin: "\\{\\{[#\\/]",
          end: "\\}\\}",
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '4',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join())
          ]),
      Mode(
          className: "template-variable",
          begin: "\\{\\{\\{",
          end: "\\}\\}\\}",
          keywords: {
            "builtin-name":
                "each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup"
          },
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '7',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join())
          ]),
      Mode(
          className: "template-variable",
          begin: "\\{\\{",
          end: "\\}\\}",
          keywords: {
            "builtin-name":
                "each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup"
          },
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '7',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join())
          ])
    ]);
