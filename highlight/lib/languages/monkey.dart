// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final monkey = Mode(
    refs: {},
    case_insensitive: true,
    keywords: {
      "keyword": [
        'p',
        'u',
        'b',
        'l',
        'i',
        'c',
        ' ',
        'p',
        'r',
        'i',
        'v',
        'a',
        't',
        'e',
        ' ',
        'p',
        'r',
        'o',
        'p',
        'e',
        'r',
        't',
        'y',
        ' ',
        'c',
        'o',
        'n',
        't',
        'i',
        'n',
        'u',
        'e',
        ' ',
        'e',
        'x',
        'i',
        't',
        ' ',
        'e',
        'x',
        't',
        'e',
        'r',
        'n',
        ' ',
        'n',
        'e',
        'w',
        ' ',
        't',
        'r',
        'y',
        ' ',
        'c',
        'a',
        't',
        'c',
        'h',
        ' ',
        'e',
        'a',
        'c',
        'h',
        'i',
        'n',
        ' ',
        'n',
        'o',
        't',
        ' ',
        'a',
        'b',
        's',
        't',
        'r',
        'a',
        'c',
        't',
        ' ',
        'f',
        'i',
        'n',
        'a',
        'l',
        ' ',
        's',
        'e',
        'l',
        'e',
        'c',
        't',
        ' ',
        'c',
        'a',
        's',
        'e',
        ' ',
        'd',
        'e',
        'f',
        'a',
        'u',
        'l',
        't',
        ' ',
        'c',
        'o',
        'n',
        's',
        't',
        ' ',
        'l',
        'o',
        'c',
        'a',
        'l',
        ' ',
        'g',
        'l',
        'o',
        'b',
        'a',
        'l',
        ' ',
        'f',
        'i',
        'e',
        'l',
        'd',
        ' ',
        'e',
        'n',
        'd',
        ' ',
        'i',
        'f',
        ' ',
        't',
        'h',
        'e',
        'n',
        ' ',
        'e',
        'l',
        's',
        'e',
        ' ',
        'e',
        'l',
        's',
        'e',
        'i',
        'f',
        ' ',
        'e',
        'n',
        'd',
        'i',
        'f',
        ' ',
        'w',
        'h',
        'i',
        'l',
        'e',
        ' ',
        'w',
        'e',
        'n',
        'd',
        ' ',
        'r',
        'e',
        'p',
        'e',
        'a',
        't',
        ' ',
        'u',
        'n',
        't',
        'i',
        'l',
        ' ',
        'f',
        'o',
        'r',
        'e',
        'v',
        'e',
        'r',
        ' ',
        'f',
        'o',
        'r',
        ' ',
        't',
        'o',
        ' ',
        's',
        't',
        'e',
        'p',
        ' ',
        'n',
        'e',
        'x',
        't',
        ' ',
        'r',
        'e',
        't',
        'u',
        'r',
        'n',
        ' ',
        'm',
        'o',
        'd',
        'u',
        'l',
        'e',
        ' ',
        'i',
        'n',
        'l',
        'i',
        'n',
        'e',
        ' ',
        't',
        'h',
        'r',
        'o',
        'w',
        ' ',
        'i',
        'm',
        'p',
        'o',
        'r',
        't',
      ].join(),
      "built_in": [
        'D',
        'e',
        'b',
        'u',
        'g',
        'L',
        'o',
        'g',
        ' ',
        'D',
        'e',
        'b',
        'u',
        'g',
        'S',
        't',
        'o',
        'p',
        ' ',
        'E',
        'r',
        'r',
        'o',
        'r',
        ' ',
        'P',
        'r',
        'i',
        'n',
        't',
        ' ',
        'A',
        'C',
        'o',
        's',
        ' ',
        'A',
        'C',
        'o',
        's',
        'r',
        ' ',
        'A',
        'S',
        'i',
        'n',
        ' ',
        'A',
        'S',
        'i',
        'n',
        'r',
        ' ',
        'A',
        'T',
        'a',
        'n',
        ' ',
        'A',
        'T',
        'a',
        'n',
        '2',
        ' ',
        'A',
        'T',
        'a',
        'n',
        '2',
        'r',
        ' ',
        'A',
        'T',
        'a',
        'n',
        'r',
        ' ',
        'A',
        'b',
        's',
        ' ',
        'A',
        'b',
        's',
        ' ',
        'C',
        'e',
        'i',
        'l',
        ' ',
        'C',
        'l',
        'a',
        'm',
        'p',
        ' ',
        'C',
        'l',
        'a',
        'm',
        'p',
        ' ',
        'C',
        'o',
        's',
        ' ',
        'C',
        'o',
        's',
        'r',
        ' ',
        'E',
        'x',
        'p',
        ' ',
        'F',
        'l',
        'o',
        'o',
        'r',
        ' ',
        'L',
        'o',
        'g',
        ' ',
        'M',
        'a',
        'x',
        ' ',
        'M',
        'a',
        'x',
        ' ',
        'M',
        'i',
        'n',
        ' ',
        'M',
        'i',
        'n',
        ' ',
        'P',
        'o',
        'w',
        ' ',
        'S',
        'g',
        'n',
        ' ',
        'S',
        'g',
        'n',
        ' ',
        'S',
        'i',
        'n',
        ' ',
        'S',
        'i',
        'n',
        'r',
        ' ',
        'S',
        'q',
        'r',
        't',
        ' ',
        'T',
        'a',
        'n',
        ' ',
        'T',
        'a',
        'n',
        'r',
        ' ',
        'S',
        'e',
        'e',
        'd',
        ' ',
        'P',
        'I',
        ' ',
        'H',
        'A',
        'L',
        'F',
        'P',
        'I',
        ' ',
        'T',
        'W',
        'O',
        'P',
        'I',
      ].join(),
      "literal": [
        't',
        'r',
        'u',
        'e',
        ' ',
        'f',
        'a',
        'l',
        's',
        'e',
        ' ',
        'n',
        'u',
        'l',
        'l',
        ' ',
        'a',
        'n',
        'd',
        ' ',
        'o',
        'r',
        ' ',
        's',
        'h',
        'l',
        ' ',
        's',
        'h',
        'r',
        ' ',
        'm',
        'o',
        'd',
      ].join()
    },
    illegal: "\\/\\*",
    contains: [
      Mode(className: "comment", begin: "#rem", end: "#end", contains: [
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ]),
      Mode(
          className: "comment",
          begin: "'",
          end: "\$",
          contains: [
            PHRASAL_WORDS_MODE,
            Mode(
                className: "doctag",
                begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
                relevance: 0)
          ],
          relevance: 0),
      Mode(
          className: "function",
          beginKeywords: "function method",
          end: "[(=:]|\$",
          illegal: "\\n",
          contains: [UNDERSCORE_TITLE_MODE]),
      Mode(
          className: "class",
          beginKeywords: "class interface",
          end: "\$",
          contains: [
            Mode(beginKeywords: "extends implements"),
            UNDERSCORE_TITLE_MODE
          ]),
      Mode(className: "built_in", begin: "\\b(self|super)\\b"),
      Mode(
          className: "meta",
          begin: "\\s*#",
          end: "\$",
          keywords: {"meta-keyword": "if else elseif endif end then"}),
      Mode(className: "meta", begin: "^\\s*strict\\b"),
      Mode(beginKeywords: "alias", end: "=", contains: [UNDERSCORE_TITLE_MODE]),
      QUOTE_STRING_MODE,
      Mode(
          className: "number",
          relevance: 0,
          variants: [Mode(begin: "[\$][a-fA-F0-9]+"), NUMBER_MODE])
    ]);
