// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final roboconf = Mode(
    refs: {
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join(): Mode(
          className: "attribute",
          begin: "[a-zA-Z-_]+",
          end: "\\s*:",
          excludeEnd: true,
          starts: Mode(end: ";", relevance: 0, contains: [
            Mode(className: "variable", begin: "\\.[a-zA-Z-_]+"),
            Mode(className: "keyword", begin: "\\(optional\\)")
          ])),
    },
    aliases: ["graph", "instances"],
    case_insensitive: true,
    keywords: [
      'i',
      'm',
      'p',
      'o',
      'r',
      't',
    ].join(),
    contains: [
      Mode(
          begin: "^facet [a-zA-Z-_][^\\n{]+\\{",
          end: "}",
          keywords: [
            'f',
            'a',
            'c',
            'e',
            't',
          ].join(),
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join()),
            HASH_COMMENT_MODE
          ]),
      Mode(
          begin: "^\\s*instance of [a-zA-Z-_][^\\n{]+\\{",
          end: "}",
          keywords: [
            'n',
            'a',
            'm',
            'e',
            ' ',
            'c',
            'o',
            'u',
            'n',
            't',
            ' ',
            'c',
            'h',
            'a',
            'n',
            'n',
            'e',
            'l',
            's',
            ' ',
            'i',
            'n',
            's',
            't',
            'a',
            'n',
            'c',
            'e',
            '-',
            'd',
            'a',
            't',
            'a',
            ' ',
            'i',
            'n',
            's',
            't',
            'a',
            'n',
            'c',
            'e',
            '-',
            's',
            't',
            'a',
            't',
            'e',
            ' ',
            'i',
            'n',
            's',
            't',
            'a',
            'n',
            'c',
            'e',
            ' ',
            'o',
            'f',
          ].join(),
          illegal: "\\S",
          contains: [
            Mode(self: true),
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join()),
            HASH_COMMENT_MODE
          ]),
      Mode(begin: "^[a-zA-Z-_][^\\n{]+\\{", end: "}", contains: [
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
        ].join()),
        HASH_COMMENT_MODE
      ]),
      HASH_COMMENT_MODE
    ]);
