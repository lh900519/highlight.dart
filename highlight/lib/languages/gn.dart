// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final gn = Mode(refs: {}, aliases: [
  "gn",
  "gni"
], keywords: {
  "keyword": [
    'i',
    'f',
    ' ',
    'e',
    'l',
    's',
    'e',
  ].join(),
  "literal": [
    't',
    'r',
    'u',
    'e',
    ' ',
    'f',
    'a',
    'l',
    's',
    'e',
    ' ',
    'c',
    'u',
    'r',
    'r',
    'e',
    'n',
    't',
    '_',
    'c',
    'p',
    'u',
    ' ',
    'c',
    'u',
    'r',
    'r',
    'e',
    'n',
    't',
    '_',
    'o',
    's',
    ' ',
    'c',
    'u',
    'r',
    'r',
    'e',
    'n',
    't',
    '_',
    't',
    'o',
    'o',
    'l',
    'c',
    'h',
    'a',
    'i',
    'n',
    ' ',
    'd',
    'e',
    'f',
    'a',
    'u',
    'l',
    't',
    '_',
    't',
    'o',
    'o',
    'l',
    'c',
    'h',
    'a',
    'i',
    'n',
    ' ',
    'h',
    'o',
    's',
    't',
    '_',
    'c',
    'p',
    'u',
    ' ',
    'h',
    'o',
    's',
    't',
    '_',
    'o',
    's',
    ' ',
    'r',
    'o',
    'o',
    't',
    '_',
    'b',
    'u',
    'i',
    'l',
    'd',
    '_',
    'd',
    'i',
    'r',
    ' ',
    'r',
    'o',
    'o',
    't',
    '_',
    'g',
    'e',
    'n',
    '_',
    'd',
    'i',
    'r',
    ' ',
    'r',
    'o',
    'o',
    't',
    '_',
    'o',
    'u',
    't',
    '_',
    'd',
    'i',
    'r',
    ' ',
    't',
    'a',
    'r',
    'g',
    'e',
    't',
    '_',
    'c',
    'p',
    'u',
    ' ',
    't',
    'a',
    'r',
    'g',
    'e',
    't',
    '_',
    'g',
    'e',
    'n',
    '_',
    'd',
    'i',
    'r',
    ' ',
    't',
    'a',
    'r',
    'g',
    'e',
    't',
    '_',
    'o',
    'u',
    't',
    '_',
    'd',
    'i',
    'r',
    ' ',
    't',
    'a',
    'r',
    'g',
    'e',
    't',
    '_',
    'o',
    's',
    ' ',
    't',
    'a',
    'r',
    'g',
    'e',
    't',
    '_',
    'n',
    'a',
    'm',
    'e',
    ' ',
    'i',
    'n',
    'v',
    'o',
    'k',
    'e',
    'r',
  ].join(),
  "type": [
    'a',
    'c',
    't',
    'i',
    'o',
    'n',
    ' ',
    'a',
    'c',
    't',
    'i',
    'o',
    'n',
    '_',
    'f',
    'o',
    'r',
    'e',
    'a',
    'c',
    'h',
    ' ',
    'c',
    'o',
    'p',
    'y',
    ' ',
    'e',
    'x',
    'e',
    'c',
    'u',
    't',
    'a',
    'b',
    'l',
    'e',
    ' ',
    'g',
    'r',
    'o',
    'u',
    'p',
    ' ',
    's',
    'h',
    'a',
    'r',
    'e',
    'd',
    '_',
    'l',
    'i',
    'b',
    'r',
    'a',
    'r',
    'y',
    ' ',
    's',
    'o',
    'u',
    'r',
    'c',
    'e',
    '_',
    's',
    'e',
    't',
    ' ',
    's',
    't',
    'a',
    't',
    'i',
    'c',
    '_',
    'l',
    'i',
    'b',
    'r',
    'a',
    'r',
    'y',
    ' ',
    'l',
    'o',
    'a',
    'd',
    'a',
    'b',
    'l',
    'e',
    '_',
    'm',
    'o',
    'd',
    'u',
    'l',
    'e',
    ' ',
    'g',
    'e',
    'n',
    'e',
    'r',
    'a',
    't',
    'e',
    'd',
    '_',
    'f',
    'i',
    'l',
    'e',
  ].join(),
  "built_in": [
    'a',
    's',
    's',
    'e',
    'r',
    't',
    ' ',
    'c',
    'o',
    'n',
    'f',
    'i',
    'g',
    ' ',
    'd',
    'e',
    'c',
    'l',
    'a',
    'r',
    'e',
    '_',
    'a',
    'r',
    'g',
    's',
    ' ',
    'd',
    'e',
    'f',
    'i',
    'n',
    'e',
    'd',
    ' ',
    'e',
    'x',
    'e',
    'c',
    '_',
    's',
    'c',
    'r',
    'i',
    'p',
    't',
    ' ',
    'f',
    'o',
    'r',
    'e',
    'a',
    'c',
    'h',
    ' ',
    'g',
    'e',
    't',
    '_',
    'l',
    'a',
    'b',
    'e',
    'l',
    '_',
    'i',
    'n',
    'f',
    'o',
    ' ',
    'g',
    'e',
    't',
    '_',
    'p',
    'a',
    't',
    'h',
    '_',
    'i',
    'n',
    'f',
    'o',
    ' ',
    'g',
    'e',
    't',
    '_',
    't',
    'a',
    'r',
    'g',
    'e',
    't',
    '_',
    'o',
    'u',
    't',
    'p',
    'u',
    't',
    's',
    ' ',
    'g',
    'e',
    't',
    'e',
    'n',
    'v',
    ' ',
    'i',
    'm',
    'p',
    'o',
    'r',
    't',
    ' ',
    'p',
    'r',
    'i',
    'n',
    't',
    ' ',
    'p',
    'r',
    'o',
    'c',
    'e',
    's',
    's',
    '_',
    'f',
    'i',
    'l',
    'e',
    '_',
    't',
    'e',
    'm',
    'p',
    'l',
    'a',
    't',
    'e',
    ' ',
    'r',
    'e',
    'a',
    'd',
    '_',
    'f',
    'i',
    'l',
    'e',
    ' ',
    'r',
    'e',
    'b',
    'a',
    's',
    'e',
    '_',
    'p',
    'a',
    't',
    'h',
    ' ',
    's',
    'e',
    't',
    '_',
    'd',
    'e',
    'f',
    'a',
    'u',
    'l',
    't',
    '_',
    't',
    'o',
    'o',
    'l',
    'c',
    'h',
    'a',
    'i',
    'n',
    ' ',
    's',
    'e',
    't',
    '_',
    'd',
    'e',
    'f',
    'a',
    'u',
    'l',
    't',
    's',
    ' ',
    's',
    'e',
    't',
    '_',
    's',
    'o',
    'u',
    'r',
    'c',
    'e',
    's',
    '_',
    'a',
    's',
    's',
    'i',
    'g',
    'n',
    'm',
    'e',
    'n',
    't',
    '_',
    'f',
    'i',
    'l',
    't',
    'e',
    'r',
    ' ',
    't',
    'e',
    'm',
    'p',
    'l',
    'a',
    't',
    'e',
    ' ',
    't',
    'o',
    'o',
    'l',
    ' ',
    't',
    'o',
    'o',
    'l',
    'c',
    'h',
    'a',
    'i',
    'n',
    ' ',
    't',
    'o',
    'o',
    'l',
    'c',
    'h',
    'a',
    'i',
    'n',
    '_',
    'a',
    'r',
    'g',
    's',
    ' ',
    'p',
    'r',
    'o',
    'p',
    'a',
    'g',
    'a',
    't',
    'e',
    's',
    '_',
    'c',
    'o',
    'n',
    'f',
    'i',
    'g',
    's',
    ' ',
    'w',
    'r',
    'i',
    't',
    'e',
    '_',
    'f',
    'i',
    'l',
    'e',
    ' ',
    'f',
    'o',
    'r',
    'w',
    'a',
    'r',
    'd',
    '_',
    'v',
    'a',
    'r',
    'i',
    'a',
    'b',
    'l',
    'e',
    's',
    '_',
    'f',
    'r',
    'o',
    'm',
    ' ',
    't',
    'a',
    'r',
    'g',
    'e',
    't',
    ' ',
    'g',
    'e',
    't',
    '_',
    'n',
    'a',
    'm',
    'e',
    '_',
    'i',
    'n',
    'f',
    'o',
    ' ',
    'n',
    'o',
    't',
    '_',
    'n',
    'e',
    'e',
    'd',
    'e',
    'd',
  ].join(),
  "symbol":
      "all_dependent_configs allow_circular_includes_from args asmflags cflags cflags_c cflags_cc cflags_objc cflags_objcc check_includes complete_static_lib configs data data_deps defines depfile deps include_dirs inputs ldflags lib_dirs libs output_extension output_name outputs public public_configs public_deps script sources testonly visibility contents output_conversion rebase data_keys walk_keys"
}, contains: [
  Mode(className: "number", relevance: 0, begin: "\\b\\d+(\\.\\d+)?"),
  Mode(
      className: "string",
      relevance: 0,
      begin: "\"",
      end: "\"",
      illegal: "\\n",
      contains: [
        BACKSLASH_ESCAPE,
        Mode(className: "subst", relevance: 2, variants: [
          Mode(begin: "\\\$[A-Za-z0-9_]+"),
          Mode(begin: "\\\${", end: "}", contains: [
            Mode(className: "variable", begin: "[a-zA-Z_]\\w*", relevance: 0)
          ])
        ]),
        Mode(className: "link", relevance: 5, begin: ":\\w+")
      ]),
  HASH_COMMENT_MODE
]);
