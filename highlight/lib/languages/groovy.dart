// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final groovy = Mode(refs: {}, keywords: {
  "literal": [
    't',
    'r',
    'u',
    'e',
    ' ',
    'f',
    'a',
    'l',
    's',
    'e',
    ' ',
    'n',
    'u',
    'l',
    'l',
  ].join(),
  "keyword": [
    'b',
    'y',
    't',
    'e',
    ' ',
    's',
    'h',
    'o',
    'r',
    't',
    ' ',
    'c',
    'h',
    'a',
    'r',
    ' ',
    'i',
    'n',
    't',
    ' ',
    'l',
    'o',
    'n',
    'g',
    ' ',
    'b',
    'o',
    'o',
    'l',
    'e',
    'a',
    'n',
    ' ',
    'f',
    'l',
    'o',
    'a',
    't',
    ' ',
    'd',
    'o',
    'u',
    'b',
    'l',
    'e',
    ' ',
    'v',
    'o',
    'i',
    'd',
    ' ',
    'd',
    'e',
    'f',
    ' ',
    'a',
    's',
    ' ',
    'i',
    'n',
    ' ',
    'a',
    's',
    's',
    'e',
    'r',
    't',
    ' ',
    't',
    'r',
    'a',
    'i',
    't',
    ' ',
    's',
    'u',
    'p',
    'e',
    'r',
    ' ',
    't',
    'h',
    'i',
    's',
    ' ',
    'a',
    'b',
    's',
    't',
    'r',
    'a',
    'c',
    't',
    ' ',
    's',
    't',
    'a',
    't',
    'i',
    'c',
    ' ',
    'v',
    'o',
    'l',
    'a',
    't',
    'i',
    'l',
    'e',
    ' ',
    't',
    'r',
    'a',
    'n',
    's',
    'i',
    'e',
    'n',
    't',
    ' ',
    'p',
    'u',
    'b',
    'l',
    'i',
    'c',
    ' ',
    'p',
    'r',
    'i',
    'v',
    'a',
    't',
    'e',
    ' ',
    'p',
    'r',
    'o',
    't',
    'e',
    'c',
    't',
    'e',
    'd',
    ' ',
    's',
    'y',
    'n',
    'c',
    'h',
    'r',
    'o',
    'n',
    'i',
    'z',
    'e',
    'd',
    ' ',
    'f',
    'i',
    'n',
    'a',
    'l',
    ' ',
    'c',
    'l',
    'a',
    's',
    's',
    ' ',
    'i',
    'n',
    't',
    'e',
    'r',
    'f',
    'a',
    'c',
    'e',
    ' ',
    'e',
    'n',
    'u',
    'm',
    ' ',
    'i',
    'f',
    ' ',
    'e',
    'l',
    's',
    'e',
    ' ',
    'f',
    'o',
    'r',
    ' ',
    'w',
    'h',
    'i',
    'l',
    'e',
    ' ',
    's',
    'w',
    'i',
    't',
    'c',
    'h',
    ' ',
    'c',
    'a',
    's',
    'e',
    ' ',
    'b',
    'r',
    'e',
    'a',
    'k',
    ' ',
    'd',
    'e',
    'f',
    'a',
    'u',
    'l',
    't',
    ' ',
    'c',
    'o',
    'n',
    't',
    'i',
    'n',
    'u',
    'e',
    ' ',
    't',
    'h',
    'r',
    'o',
    'w',
    ' ',
    't',
    'h',
    'r',
    'o',
    'w',
    's',
    ' ',
    't',
    'r',
    'y',
    ' ',
    'c',
    'a',
    't',
    'c',
    'h',
    ' ',
    'f',
    'i',
    'n',
    'a',
    'l',
    'l',
    'y',
    ' ',
    'i',
    'm',
    'p',
    'l',
    'e',
    'm',
    'e',
    'n',
    't',
    's',
    ' ',
    'e',
    'x',
    't',
    'e',
    'n',
    'd',
    's',
    ' ',
    'n',
    'e',
    'w',
    ' ',
    'i',
    'm',
    'p',
    'o',
    'r',
    't',
    ' ',
    'p',
    'a',
    'c',
    'k',
    'a',
    'g',
    'e',
    ' ',
    'r',
    'e',
    't',
    'u',
    'r',
    'n',
    ' ',
    'i',
    'n',
    's',
    't',
    'a',
    'n',
    'c',
    'e',
    'o',
    'f',
  ].join()
}, contains: [
  Mode(
      className: "comment",
      begin: "/\\*\\*",
      end: "\\*/",
      contains: [
        Mode(begin: "\\w+@", relevance: 0),
        Mode(className: "doctag", begin: "@[A-Za-z]+"),
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ],
      relevance: 0),
  C_LINE_COMMENT_MODE,
  C_BLOCK_COMMENT_MODE,
  Mode(className: "string", begin: "\"\"\"", end: "\"\"\""),
  Mode(className: "string", begin: "'''", end: "'''"),
  Mode(className: "string", begin: "\\\$/", end: "/\\\$", relevance: 10),
  APOS_STRING_MODE,
  Mode(
      className: "regexp",
      begin: "\\x7e?\\/[^\\/\\n]+\\/",
      contains: [BACKSLASH_ESCAPE]),
  QUOTE_STRING_MODE,
  Mode(className: "meta", begin: "^#!/usr/bin/env", end: "\$", illegal: "\n"),
  BINARY_NUMBER_MODE,
  Mode(
      className: "class",
      beginKeywords: "class interface trait enum",
      end: "{",
      illegal: ":",
      contains: [
        Mode(beginKeywords: "extends implements"),
        UNDERSCORE_TITLE_MODE
      ]),
  C_NUMBER_MODE,
  Mode(className: "meta", begin: "@[A-Za-z]+"),
  Mode(className: "string", begin: "[^\\?]{0}[A-Za-z0-9_\$]+ *:"),
  Mode(begin: "\\?", end: "\\:"),
  Mode(className: "symbol", begin: "^\\s*[A-Za-z0-9_\$]+:", relevance: 0)
], illegal: "#|<\\/");
