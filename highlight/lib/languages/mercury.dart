// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final mercury = Mode(refs: {}, aliases: [
  "m",
  "moo"
], keywords: {
  "keyword": [
    'm',
    'o',
    'd',
    'u',
    'l',
    'e',
    ' ',
    'u',
    's',
    'e',
    '_',
    'm',
    'o',
    'd',
    'u',
    'l',
    'e',
    ' ',
    'i',
    'm',
    'p',
    'o',
    'r',
    't',
    '_',
    'm',
    'o',
    'd',
    'u',
    'l',
    'e',
    ' ',
    'i',
    'n',
    'c',
    'l',
    'u',
    'd',
    'e',
    '_',
    'm',
    'o',
    'd',
    'u',
    'l',
    'e',
    ' ',
    'e',
    'n',
    'd',
    '_',
    'm',
    'o',
    'd',
    'u',
    'l',
    'e',
    ' ',
    'i',
    'n',
    'i',
    't',
    'i',
    'a',
    'l',
    'i',
    's',
    'e',
    ' ',
    'm',
    'u',
    't',
    'a',
    'b',
    'l',
    'e',
    ' ',
    'i',
    'n',
    'i',
    't',
    'i',
    'a',
    'l',
    'i',
    'z',
    'e',
    ' ',
    'f',
    'i',
    'n',
    'a',
    'l',
    'i',
    'z',
    'e',
    ' ',
    'f',
    'i',
    'n',
    'a',
    'l',
    'i',
    's',
    'e',
    ' ',
    'i',
    'n',
    't',
    'e',
    'r',
    'f',
    'a',
    'c',
    'e',
    ' ',
    'i',
    'm',
    'p',
    'l',
    'e',
    'm',
    'e',
    'n',
    't',
    'a',
    't',
    'i',
    'o',
    'n',
    ' ',
    'p',
    'r',
    'e',
    'd',
    ' ',
    'm',
    'o',
    'd',
    'e',
    ' ',
    'f',
    'u',
    'n',
    'c',
    ' ',
    't',
    'y',
    'p',
    'e',
    ' ',
    'i',
    'n',
    's',
    't',
    ' ',
    's',
    'o',
    'l',
    'v',
    'e',
    'r',
    ' ',
    'a',
    'n',
    'y',
    '_',
    'p',
    'r',
    'e',
    'd',
    ' ',
    'a',
    'n',
    'y',
    '_',
    'f',
    'u',
    'n',
    'c',
    ' ',
    'i',
    's',
    ' ',
    's',
    'e',
    'm',
    'i',
    'd',
    'e',
    't',
    ' ',
    'd',
    'e',
    't',
    ' ',
    'n',
    'o',
    'n',
    'd',
    'e',
    't',
    ' ',
    'm',
    'u',
    'l',
    't',
    'i',
    ' ',
    'e',
    'r',
    'r',
    'o',
    'n',
    'e',
    'o',
    'u',
    's',
    ' ',
    'f',
    'a',
    'i',
    'l',
    'u',
    'r',
    'e',
    ' ',
    'c',
    'c',
    '_',
    'n',
    'o',
    'n',
    'd',
    'e',
    't',
    ' ',
    'c',
    'c',
    '_',
    'm',
    'u',
    'l',
    't',
    'i',
    ' ',
    't',
    'y',
    'p',
    'e',
    'c',
    'l',
    'a',
    's',
    's',
    ' ',
    'i',
    'n',
    's',
    't',
    'a',
    'n',
    'c',
    'e',
    ' ',
    'w',
    'h',
    'e',
    'r',
    'e',
    ' ',
    'p',
    'r',
    'a',
    'g',
    'm',
    'a',
    ' ',
    'p',
    'r',
    'o',
    'm',
    'i',
    's',
    'e',
    ' ',
    'e',
    'x',
    't',
    'e',
    'r',
    'n',
    'a',
    'l',
    ' ',
    't',
    'r',
    'a',
    'c',
    'e',
    ' ',
    'a',
    't',
    'o',
    'm',
    'i',
    'c',
    ' ',
    'o',
    'r',
    '_',
    'e',
    'l',
    's',
    'e',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    'c',
    'o',
    'm',
    'p',
    'l',
    'e',
    't',
    'e',
    '_',
    's',
    'w',
    'i',
    't',
    'c',
    'h',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    'd',
    'e',
    't',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    's',
    'e',
    'm',
    'i',
    'd',
    'e',
    't',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    'm',
    'u',
    'l',
    't',
    'i',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    'n',
    'o',
    'n',
    'd',
    'e',
    't',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    'c',
    'c',
    '_',
    'm',
    'u',
    'l',
    't',
    'i',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    'c',
    'c',
    '_',
    'n',
    'o',
    'n',
    'd',
    'e',
    't',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    'e',
    'r',
    'r',
    'o',
    'n',
    'e',
    'o',
    'u',
    's',
    ' ',
    'r',
    'e',
    'q',
    'u',
    'i',
    'r',
    'e',
    '_',
    'f',
    'a',
    'i',
    'l',
    'u',
    'r',
    'e',
  ].join(),
  "meta":
      "inline no_inline type_spec source_file fact_table obsolete memo loop_check minimal_model terminates does_not_terminate check_termination promise_equivalent_clauses foreign_proc foreign_decl foreign_code foreign_type foreign_import_module foreign_export_enum foreign_export foreign_enum may_call_mercury will_not_call_mercury thread_safe not_thread_safe maybe_thread_safe promise_pure promise_semipure tabled_for_io local untrailed trailed attach_to_io_state can_pass_as_mercury_type stable will_not_throw_exception may_modify_trail will_not_modify_trail may_duplicate may_not_duplicate affects_liveness does_not_affect_liveness doesnt_affect_liveness no_sharing unknown_sharing sharing",
  "built_in": [
    's',
    'o',
    'm',
    'e',
    ' ',
    'a',
    'l',
    'l',
    ' ',
    'n',
    'o',
    't',
    ' ',
    'i',
    'f',
    ' ',
    't',
    'h',
    'e',
    'n',
    ' ',
    'e',
    'l',
    's',
    'e',
    ' ',
    't',
    'r',
    'u',
    'e',
    ' ',
    'f',
    'a',
    'i',
    'l',
    ' ',
    'f',
    'a',
    'l',
    's',
    'e',
    ' ',
    't',
    'r',
    'y',
    ' ',
    'c',
    'a',
    't',
    'c',
    'h',
    ' ',
    'c',
    'a',
    't',
    'c',
    'h',
    '_',
    'a',
    'n',
    'y',
    ' ',
    's',
    'e',
    'm',
    'i',
    'd',
    'e',
    't',
    '_',
    't',
    'r',
    'u',
    'e',
    ' ',
    's',
    'e',
    'm',
    'i',
    'd',
    'e',
    't',
    '_',
    'f',
    'a',
    'l',
    's',
    'e',
    ' ',
    's',
    'e',
    'm',
    'i',
    'd',
    'e',
    't',
    '_',
    'f',
    'a',
    'i',
    'l',
    ' ',
    'i',
    'm',
    'p',
    'u',
    'r',
    'e',
    '_',
    't',
    'r',
    'u',
    'e',
    ' ',
    'i',
    'm',
    'p',
    'u',
    'r',
    'e',
    ' ',
    's',
    'e',
    'm',
    'i',
    'p',
    'u',
    'r',
    'e',
  ].join()
}, contains: [
  Mode(className: "built_in", variants: [
    Mode(begin: "<=>"),
    Mode(begin: "<=", relevance: 0),
    Mode(begin: "=>", relevance: 0),
    Mode(begin: "/\\\\"),
    Mode(begin: "\\\\/")
  ]),
  Mode(
      className: "built_in",
      variants: [Mode(begin: ":-\\|-->"), Mode(begin: "=", relevance: 0)]),
  Mode(className: "comment", begin: "%", end: "\$", contains: [
    PHRASAL_WORDS_MODE,
    Mode(
        className: "doctag",
        begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
        relevance: 0)
  ]),
  C_BLOCK_COMMENT_MODE,
  Mode(className: "number", begin: "0'.\\|0[box][0-9a-fA-F]*"),
  NUMBER_MODE,
  Mode(
      className: "string",
      begin: "'",
      end: "'",
      illegal: "\\n",
      contains: [BACKSLASH_ESCAPE],
      relevance: 0),
  Mode(
      className: "string",
      begin: "\"",
      end: "\"",
      illegal: "\\n",
      contains: [
        BACKSLASH_ESCAPE,
        Mode(
            className: "subst",
            begin:
                "\\\\[abfnrtv]\\|\\\\x[0-9a-fA-F]*\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]",
            relevance: 0)
      ],
      relevance: 0),
  Mode(begin: ":-"),
  Mode(begin: "\\.\$")
]);
