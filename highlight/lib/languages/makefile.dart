// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final makefile = Mode(
    refs: {
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join(): Mode(className: "variable", variants: [
        Mode(begin: "\\\$\\([a-zA-Z_]\\w*\\)", contains: [BACKSLASH_ESCAPE]),
        Mode(begin: "\\\$[@%<?\\^\\+\\*]")
      ]),
    },
    aliases: ["mk", "mak"],
    keywords: [
      'd',
      'e',
      'f',
      'i',
      'n',
      'e',
      ' ',
      'e',
      'n',
      'd',
      'e',
      'f',
      ' ',
      'u',
      'n',
      'd',
      'e',
      'f',
      'i',
      'n',
      'e',
      ' ',
      'i',
      'f',
      'd',
      'e',
      'f',
      ' ',
      'i',
      'f',
      'n',
      'd',
      'e',
      'f',
      ' ',
      'i',
      'f',
      'e',
      'q',
      ' ',
      'i',
      'f',
      'n',
      'e',
      'q',
      ' ',
      'e',
      'l',
      's',
      'e',
      ' ',
      'e',
      'n',
      'd',
      'i',
      'f',
      ' ',
      'i',
      'n',
      'c',
      'l',
      'u',
      'd',
      'e',
      ' ',
      '-',
      'i',
      'n',
      'c',
      'l',
      'u',
      'd',
      'e',
      ' ',
      's',
      'i',
      'n',
      'c',
      'l',
      'u',
      'd',
      'e',
      ' ',
      'o',
      'v',
      'e',
      'r',
      'r',
      'i',
      'd',
      'e',
      ' ',
      'e',
      'x',
      'p',
      'o',
      'r',
      't',
      ' ',
      'u',
      'n',
      'e',
      'x',
      'p',
      'o',
      'r',
      't',
      ' ',
      'p',
      'r',
      'i',
      'v',
      'a',
      't',
      'e',
      ' ',
      'v',
      'p',
      'a',
      't',
      'h',
    ].join(),
    lexemes: "[\\w-]+",
    contains: [
      HASH_COMMENT_MODE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join()),
      Mode(className: "string", begin: "\"", end: "\"", contains: [
        BACKSLASH_ESCAPE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
        ].join())
      ]),
      Mode(
          className: "variable",
          begin: "\\\$\\([\\w-]+\\s",
          end: "\\)",
          keywords: {
            "built_in":
                "warning abspath shell findstring eval addsuffix foreach word wordlist realpath strip origin patsubst suffix error addprefix basename and value join filter notdir call wildcard lastword dir firstword flavor sort subst filter-out or if file"
          },
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '1',
            ].join())
          ]),
      Mode(begin: "^[a-zA-Z_]\\w*\\s*(?=[:+?]?=)"),
      Mode(
          className: "meta",
          begin: "^\\.PHONY:",
          end: "\$",
          keywords: {"meta-keyword": ".PHONY"},
          lexemes: "[\\.\\w]+"),
      Mode(className: "section", begin: "^[^\\s]+:", end: "\$", contains: [
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
        ].join())
      ])
    ]);
