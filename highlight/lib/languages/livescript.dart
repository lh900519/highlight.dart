// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final livescript = Mode(
    refs: {
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '9',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join(): Mode(
          className: "title",
          begin: "[A-Za-z\$_](?:-[0-9A-Za-z\$_]|[0-9A-Za-z\$_])*",
          relevance: 0),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join(): Mode(
          className: "subst",
          begin: "#[A-Za-z\$_]",
          end: "(?:\\-[0-9A-Za-z\$_]|[0-9A-Za-z\$_])*",
          keywords: {
            "keyword": [
              'in',
              'if',
              'for',
              'while',
              'finally',
              'new',
              'do',
              'return',
              'else',
              'break',
              'catch',
              'instanceof',
              'throw',
              'try',
              'this',
              'switch',
              'continue',
              'typeof',
              'delete',
              'debugger',
              'case',
              'default',
              'function',
              'var',
              'with',
              'then',
              'unless',
              'until',
              'loop',
              'of',
              'by',
              'when',
              'and',
              'or',
              'is',
              'isnt',
              'not',
              'it',
              'that',
              'otherwise',
              'from',
              'to',
              'til',
              'fallthrough',
              'super',
              'case',
              'default',
              'function',
              'var',
              'void',
              'const',
              'let',
              'enum',
              'export',
              'import',
              'native',
              'list',
              'map',
              '__hasProp',
              '__extends',
              '__slice',
              '__bind',
              '__indexOf',
            ].join(),
            "literal": [
              'true',
              'false',
              'null',
              'undefined',
              'yes',
              'no',
              'on',
              'off',
              'it',
              'that',
              'void',
            ].join(),
            "built_in": [
              'npm',
              'require',
              'console',
              'print',
              'module',
              'global',
              'window',
              'document',
            ].join()
          }),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '5',
      ].join(): Mode(
          begin: "``",
          end: "``",
          excludeBegin: true,
          excludeEnd: true,
          subLanguage: ["javascript"]),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
      ].join(): Mode(begin: "@[A-Za-z\$_](?:-[0-9A-Za-z\$_]|[0-9A-Za-z\$_])*"),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '3',
      ].join(): Mode(className: "regexp", variants: [
        Mode(begin: "//", end: "//[gim]*", contains: [
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '2',
            '~',
            'v',
            'a',
            'r',
            'i',
            'a',
            'n',
            't',
            's',
            '~',
            '2',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '1',
          ].join()),
          HASH_COMMENT_MODE
        ]),
        Mode(begin: "\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W)")
      ]),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join(): Mode(className: "subst", begin: "#\\{", end: "}", keywords: {
        "keyword": [
          'in',
          'if',
          'for',
          'while',
          'finally',
          'new',
          'do',
          'return',
          'else',
          'break',
          'catch',
          'instanceof',
          'throw',
          'try',
          'this',
          'switch',
          'continue',
          'typeof',
          'delete',
          'debugger',
          'case',
          'default',
          'function',
          'var',
          'with',
          'then',
          'unless',
          'until',
          'loop',
          'of',
          'by',
          'when',
          'and',
          'or',
          'is',
          'isnt',
          'not',
          'it',
          'that',
          'otherwise',
          'from',
          'to',
          'til',
          'fallthrough',
          'super',
          'case',
          'default',
          'function',
          'var',
          'void',
          'const',
          'let',
          'enum',
          'export',
          'import',
          'native',
          'list',
          'map',
          '__hasProp',
          '__extends',
          '__slice',
          '__bind',
          '__indexOf',
        ].join(),
        "literal": [
          'true',
          'false',
          'null',
          'undefined',
          'yes',
          'no',
          'on',
          'off',
          'it',
          'that',
          'void',
        ].join(),
        "built_in": [
          'npm',
          'require',
          'console',
          'print',
          'module',
          'global',
          'window',
          'document',
        ].join()
      }, contains: [
        BINARY_NUMBER_MODE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '2',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '3',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '2',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '2',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '5',
        ].join())
      ]),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join(): Mode(className: "string", variants: [
        Mode(begin: "'''", end: "'''", contains: [BACKSLASH_ESCAPE]),
        Mode(begin: "'", end: "'", contains: [BACKSLASH_ESCAPE]),
        Mode(begin: "\"\"\"", end: "\"\"\"", contains: [
          BACKSLASH_ESCAPE,
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '2',
            '~',
            'v',
            'a',
            'r',
            'i',
            'a',
            'n',
            't',
            's',
            '~',
            '2',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '1',
          ].join()),
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '2',
            '~',
            'v',
            'a',
            'r',
            'i',
            'a',
            'n',
            't',
            's',
            '~',
            '2',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '2',
          ].join())
        ]),
        Mode(begin: "\"", end: "\"", contains: [
          BACKSLASH_ESCAPE,
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '2',
            '~',
            'v',
            'a',
            'r',
            'i',
            'a',
            'n',
            't',
            's',
            '~',
            '2',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '1',
          ].join()),
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '2',
            '~',
            'v',
            'a',
            'r',
            'i',
            'a',
            'n',
            't',
            's',
            '~',
            '2',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '2',
          ].join())
        ]),
        Mode(begin: "\\\\", end: "(\\s|\$)", excludeEnd: true)
      ]),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join(): Mode(
          className: "number",
          begin:
              "(\\b0[xX][a-fA-F0-9_]+)|(\\b\\d(\\d|_\\d)*(\\.(\\d(\\d|_\\d)*)?)?(_*[eE]([-+]\\d(_\\d|\\d)*)?)?[_a-z]*)",
          relevance: 0,
          starts: Mode(end: "(\\s*/)?", relevance: 0)),
    },
    aliases: ["ls"],
    keywords: {
      "keyword": [
        'in',
        'if',
        'for',
        'while',
        'finally',
        'new',
        'do',
        'return',
        'else',
        'break',
        'catch',
        'instanceof',
        'throw',
        'try',
        'this',
        'switch',
        'continue',
        'typeof',
        'delete',
        'debugger',
        'case',
        'default',
        'function',
        'var',
        'with',
        'then',
        'unless',
        'until',
        'loop',
        'of',
        'by',
        'when',
        'and',
        'or',
        'is',
        'isnt',
        'not',
        'it',
        'that',
        'otherwise',
        'from',
        'to',
        'til',
        'fallthrough',
        'super',
        'case',
        'default',
        'function',
        'var',
        'void',
        'const',
        'let',
        'enum',
        'export',
        'import',
        'native',
        'list',
        'map',
        '__hasProp',
        '__extends',
        '__slice',
        '__bind',
        '__indexOf',
      ].join(),
      "literal": [
        'true',
        'false',
        'null',
        'undefined',
        'yes',
        'no',
        'on',
        'off',
        'it',
        'that',
        'void',
      ].join(),
      "built_in": [
        'npm',
        'require',
        'console',
        'print',
        'module',
        'global',
        'window',
        'document',
      ].join()
    },
    illegal: "\\/\\*",
    contains: [
      BINARY_NUMBER_MODE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '3',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '5',
      ].join()),
      Mode(className: "comment", begin: "\\/\\*", end: "\\*\\/", contains: [
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ]),
      HASH_COMMENT_MODE,
      Mode(begin: "(#=>|=>|\\|>>|-?->|\\!->)"),
      Mode(
          className: "function",
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '9',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join()),
            Mode(
                className: "params",
                begin: "\\(",
                returnBegin: true,
                contains: [
                  Mode(begin: "\\(", end: "\\)", keywords: {
                    "keyword": [
                      'in',
                      'if',
                      'for',
                      'while',
                      'finally',
                      'new',
                      'do',
                      'return',
                      'else',
                      'break',
                      'catch',
                      'instanceof',
                      'throw',
                      'try',
                      'this',
                      'switch',
                      'continue',
                      'typeof',
                      'delete',
                      'debugger',
                      'case',
                      'default',
                      'function',
                      'var',
                      'with',
                      'then',
                      'unless',
                      'until',
                      'loop',
                      'of',
                      'by',
                      'when',
                      'and',
                      'or',
                      'is',
                      'isnt',
                      'not',
                      'it',
                      'that',
                      'otherwise',
                      'from',
                      'to',
                      'til',
                      'fallthrough',
                      'super',
                      'case',
                      'default',
                      'function',
                      'var',
                      'void',
                      'const',
                      'let',
                      'enum',
                      'export',
                      'import',
                      'native',
                      'list',
                      'map',
                      '__hasProp',
                      '__extends',
                      '__slice',
                      '__bind',
                      '__indexOf',
                    ].join(),
                    "literal": [
                      'true',
                      'false',
                      'null',
                      'undefined',
                      'yes',
                      'no',
                      'on',
                      'off',
                      'it',
                      'that',
                      'void',
                    ].join(),
                    "built_in": [
                      'npm',
                      'require',
                      'console',
                      'print',
                      'module',
                      'global',
                      'window',
                      'document',
                    ].join()
                  }, contains: [
                    Mode(self: true),
                    BINARY_NUMBER_MODE,
                    Mode(
                        ref: [
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '1',
                    ].join()),
                    Mode(
                        ref: [
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '2',
                    ].join()),
                    Mode(
                        ref: [
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '2',
                      '~',
                      'v',
                      'a',
                      'r',
                      'i',
                      'a',
                      'n',
                      't',
                      's',
                      '~',
                      '2',
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '1',
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '3',
                    ].join()),
                    Mode(
                        ref: [
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '2',
                      '~',
                      'v',
                      'a',
                      'r',
                      'i',
                      'a',
                      'n',
                      't',
                      's',
                      '~',
                      '2',
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '1',
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '4',
                    ].join()),
                    Mode(
                        ref: [
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '2',
                      '~',
                      'v',
                      'a',
                      'r',
                      'i',
                      'a',
                      'n',
                      't',
                      's',
                      '~',
                      '2',
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '1',
                      '~',
                      'c',
                      'o',
                      'n',
                      't',
                      'a',
                      'i',
                      'n',
                      's',
                      '~',
                      '5',
                    ].join())
                  ])
                ])
          ],
          returnBegin: true,
          variants: [
            Mode(
                begin:
                    "([A-Za-z\$_](?:-[0-9A-Za-z\$_]|[0-9A-Za-z\$_])*\\s*(?:=|:=)\\s*)?(\\(.*\\))?\\s*\\B\\->\\*?",
                end: "\\->\\*?"),
            Mode(
                begin:
                    "([A-Za-z\$_](?:-[0-9A-Za-z\$_]|[0-9A-Za-z\$_])*\\s*(?:=|:=)\\s*)?!?(\\(.*\\))?\\s*\\B[-\\x7e]{1,2}>\\*?",
                end: "[-\\x7e]{1,2}>\\*?"),
            Mode(
                begin:
                    "([A-Za-z\$_](?:-[0-9A-Za-z\$_]|[0-9A-Za-z\$_])*\\s*(?:=|:=)\\s*)?(\\(.*\\))?\\s*\\B!?[-\\x7e]{1,2}>\\*?",
                end: "!?[-\\x7e]{1,2}>\\*?")
          ]),
      Mode(
          className: "class",
          beginKeywords: "class",
          end: "\$",
          illegal: "[:=\"\\[\\]]",
          contains: [
            Mode(
                beginKeywords: "extends",
                endsWithParent: true,
                illegal: "[:=\"\\[\\]]",
                contains: [
                  Mode(
                      ref: [
                    '~',
                    'c',
                    'o',
                    'n',
                    't',
                    'a',
                    'i',
                    'n',
                    's',
                    '~',
                    '9',
                    '~',
                    'c',
                    'o',
                    'n',
                    't',
                    'a',
                    'i',
                    'n',
                    's',
                    '~',
                    '0',
                  ].join())
                ]),
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '9',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join())
          ]),
      Mode(
          begin: "[A-Za-z\$_](?:-[0-9A-Za-z\$_]|[0-9A-Za-z\$_])*:",
          end: ":",
          returnBegin: true,
          returnEnd: true,
          relevance: 0)
    ]);
