// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final dart = Mode(refs: {
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '0',
    '~',
    'v',
    'a',
    'r',
    'i',
    'a',
    'n',
    't',
    's',
    '~',
    '4',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '2',
  ].join(): Mode(
      className: "subst",
      variants: [Mode(begin: "\\\${", end: "}")],
      keywords: [
        't',
        'r',
        'u',
        'e',
        ' ',
        'f',
        'a',
        'l',
        's',
        'e',
        ' ',
        'n',
        'u',
        'l',
        'l',
        ' ',
        't',
        'h',
        'i',
        's',
        ' ',
        'i',
        's',
        ' ',
        'n',
        'e',
        'w',
        ' ',
        's',
        'u',
        'p',
        'e',
        'r',
      ].join(),
      contains: [
        C_NUMBER_MODE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
        ].join())
      ]),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '0',
    '~',
    'v',
    'a',
    'r',
    'i',
    'a',
    'n',
    't',
    's',
    '~',
    '4',
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '1',
  ].join():
      Mode(className: "subst", variants: [Mode(begin: "\\\$[A-Za-z0-9_]+")]),
  [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '0',
  ].join(): Mode(className: "string", variants: [
    Mode(begin: "r'''", end: "'''"),
    Mode(begin: "r\"\"\"", end: "\"\"\""),
    Mode(begin: "r'", end: "'", illegal: "\\n"),
    Mode(begin: "r\"", end: "\"", illegal: "\\n"),
    Mode(begin: "'''", end: "'''", contains: [
      BACKSLASH_ESCAPE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join())
    ]),
    Mode(begin: "\"\"\"", end: "\"\"\"", contains: [
      BACKSLASH_ESCAPE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join())
    ]),
    Mode(begin: "'", end: "'", illegal: "\\n", contains: [
      BACKSLASH_ESCAPE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join())
    ]),
    Mode(begin: "\"", end: "\"", illegal: "\\n", contains: [
      BACKSLASH_ESCAPE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '4',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
      ].join())
    ])
  ]),
}, keywords: {
  "keyword":
      "enum implements set async do dynamic default abstract final super factory finally class yield inferface as continue new static while deferred typedef sync part else Function covariant extension if hide mixin on false assert case this true break external for catch with await export import try library in is const rethrow extends null return get switch operator show var throw void",
  "built_in":
      "Comparable DateTime ElementList Null List Stopwatch String Iterable Duration Uri print StringBuffer Match Function querySelector int Pattern RegExp Iterator querySelectorAll Element double document Symbol StringSink dynamic Set Map Type window Object bool num"
}, contains: [
  Mode(
      ref: [
    '~',
    'c',
    'o',
    'n',
    't',
    'a',
    'i',
    'n',
    's',
    '~',
    '0',
  ].join()),
  Mode(className: "comment", begin: "/\\*\\*", end: "\\*/", contains: [
    PHRASAL_WORDS_MODE,
    Mode(
        className: "doctag",
        begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
        relevance: 0)
  ], subLanguage: [
    "markdown"
  ]),
  Mode(className: "comment", begin: "///+\\s*", end: "\$", contains: [
    Mode(subLanguage: ["markdown"], begin: ".", end: "\$"),
    PHRASAL_WORDS_MODE,
    Mode(
        className: "doctag",
        begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
        relevance: 0)
  ]),
  C_LINE_COMMENT_MODE,
  C_BLOCK_COMMENT_MODE,
  Mode(
      className: "class",
      beginKeywords: "class interface",
      end: "{",
      excludeEnd: true,
      contains: [
        Mode(beginKeywords: "extends implements"),
        UNDERSCORE_TITLE_MODE
      ]),
  C_NUMBER_MODE,
  Mode(className: "meta", begin: "@[A-Za-z]+"),
  Mode(begin: "=>")
]);
