// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final livecodeserver = Mode(
    refs: {
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '6',
      ].join(): Mode(
          className: "title",
          begin: "[a-zA-Z]\\w*",
          relevance: 0,
          variants: [
            Mode(begin: "\\b_*rig[A-Z]+[A-Za-z0-9_\\-]*"),
            Mode(begin: "\\b_[a-z0-9\\-]+")
          ]),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '1',
      ].join(): Mode(
          className: "title", begin: "\\b([A-Za-z0-9_\\-]+)\\b", relevance: 0),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join(): Mode(
          className: "variable",
          variants: [
            Mode(begin: "\\b([gtps][A-Z]{1}[a-zA-Z0-9]*)(\\[.+\\])?(?:\\s*?)"),
            Mode(begin: "\\\$_[A-Z]+")
          ],
          relevance: 0),
    },
    case_insensitive: false,
    keywords: {
      "keyword":
          "segment stdout sentence normal int2s div numeric bitAnd bitOr to bitXor ascending ticks a text repeat URL the if detailed dateTime internet begins end uInt4 abbreviated keys token whole ftp uInt4s https or not long into and eighth dateItems within among abbr short integer repeat while with wrap \$_GET sentences \$_GET_BINARY finally after until else byte ninth characters words sixth line stdin seventh word \$_POST_BINARY any chars \$_SESSION sec trueWords from for seconds \$_POST mid string it with \$_GET_RAW relative forever file items using english lines int1 uInt2 at catch before \$_FILES codepoint codeunit codeunits middle trueWord \$_POST_RAW segments milliseconds int1s \$_SERVER fourth int2 in http character bytes rel of fifth black the uInt2s effective paragraph element in last descending first contains stderr uInt1s \$_COOKIE codepoints by secs int4s switch item private of each bitNot try keys third real4 tenth second uInt1 without int4 as abbrev mod words case system an binfile real8 then char ends tick",
      "literal":
          "empty TEN SIX ONE SEVEN TRUE formfeed PI EMPTY CRLF FIVE THREE COMMA RIGHT SPACE EIGHT linefeed ZERO pi eof five COLON NONE ten none colon CR FOUR seven FILE_WRITE_MODE four two endoffile EOF TWO RISTATE FILE_READ_UMASK crlf one false right FORMFEED null nine comma BACKSLASH three NINE FILE_WRITE_UMASK TAB quote cr space FALSE QUOTE RETURN FILE_READ_MODE zero ENDOFFILE return six RIVERSION DIR_WRITE_UMASK NULL LINEFEED backslash eight tab true FILE_WRITE_MODE DIR_READ_UMASK DIR_WRITE_MODE",
      "built_in":
          "trunc filter revZipDescribeItem URLDecode close sha1Digest URL version revZipEnumerateItems revdb_query divide toUpper sum textDecode stdDev local sec revdb_columnbynumber revDatabaseColumnLengths acos revXMLAttributeValues popVariance constantNames revDatabaseColumnNumbered revXMLDataFromXPathQuery asin DNSServers line breakpoint combine revXMLRPC_GetRequest revQueryDatabase from secs revdb_movenext read folder openSockets revdb_columntypes annuity do revDeleteAllXMLTrees alias base64Encode revdb_movefirst revdb_columnisnull result statRound revXMLRPC_DeleteParam revDatabaseColumnNames platform tan require revDatabaseColumnTypes process line revXMLChildNames isNumber revMoveFolder compress ln1 hostAddress revDatabaseTableNames revQueryDatabaseBlob revAppendXML messageDigest tempName revCurrentRecordIsFirst libURLresetAll merge resolve revdb_execute openProcessIDs populationVariance revZipAddItemWithData date revdb_isbof sampVariance textEncode openProcesses revDeleteXMLNode revSetXMLAttribute revXMLRPC_Documents decrypt folders exp10 load time md5Digest arrayDecode cos flushEvents revExecuteSQL weekdayNames revCommitDatabase revdb_rollback cipherNames shell messageAuthenticationCode post avg ticks format revDataFromQuery codepointProperty revDatabaseType average rel xsltApplyStylesheetFromFile revXMLFirstChild millisecond encrypt resetAll put upper uniDecode variance revdb_cursorconnection revXMLRPC_Execute exp revZipReplaceItemWithData openfiles revdb_connectionerr milliseconds difference revMoveToNextRecord revdb_connections revdb_tablenames globals revXMLRPC_SetSocket localNames intersect revdb_closeCursor revXMLRPC_GetHost codeunitOffset process revdb_columnnames stop revXMLRPC_Free truewordOffset revMoveToLastRecord baseConvert constant normalizeText systemVersion revXMLValidateDTD revCloseCursor create files abs toLower revXMLTree millisec geometricMean hostAddressToName cancel socket revXMLText revXMLRPC_FreeAll itemOffset revXMLRPC_DeleteDocument commandNames file multiply revXMLRPC_SetHost revdb_commit cachedURLs revZipOpenArchive tick pendingMessages specialFolderPath revXMLNextSibling tokenOffset revInsertXMLNode revXMLChildContents get hostName revXMLAttributes revXMLRPC_GetPath paramCount revNumberOfRecords revXMLRPC_CreateRequest revCopyXMLNode libUrlFormData dateFormat cachedURL revDatabaseID param revXMLEvaluateXPath len atan revZipExtractItemToFile macToISO kill libURLSetFTPListCommand revdb_disconnect ln wait open max libURLFollowHttpRedirects start variable revdb_dbtype revAddXMLNode rename lineOffset revdb_cursors transpose uuid lower matchText revdb_iseof revDatabaseCursors functionNames write folder shortFilePath URL codepointOffset revXMLRPC_GetProtocol revdb_connect convert libURLSetFTPStopTime codepointToNum binaryEncode dispatch libURLLastHTTPHeaders revUnixFromMacPath directory to revXMLNumberOfChildren byteToNum arrayEncode wordOffset nativeCharToNum global revZipAddUncompressedItemWithFile log2 offset revXMLRPC_SetMethod unload byteOffset send sin revZipAddUncompressedItemWithData word numToNativeChar compound revCreateXMLTreeFromFile sentenceOffset new revZipOpenArchives sqrt process charToNum delete relative revXMLMatchingNode revDeleteXMLTree directory exp2 revXMLRPC_GetParamNode avgDev revZipSetProgressCallback sort extents revXMLTrees processID include revSetDatabaseDriverPath replaceText random revXMLRPC_GetParamType revXMLRPC_SetPort uniEncode params revXMLAddDTD diskSpace revCurrentRecord revMoveToPreviousRecord revXMLRPC_GetSocket word revdb_querylist revdb_cursorerr paragraphOffset log revXMLAttribute revQueryIsAtEnd revMoveToRecord binaryDecode revXMLRPC_GetParamCount revXMLRPC_GetParam revZipExtractItemToVariable revXMLRPC_SetProtocol socket revPutIntoXMLNode revXMLRPC_GetResponse revXMLRPC_AddParam aliasReference revQueryResult libUrlMultipartFormData libURLVersion directories symmetric replace seconds URLEncode libURLftpCommand seek clear hostNameToAddress folder subtract directory revXMLCreateTreeWithNamespaces waitDepth atan2 exp1 union decompress round revXMLRootNode standardDeviation split revdb_columncount monthNames longFilePath numToCodepoint matrixMultiply revXMLCreateTreeFromFileWithNamespaces harmonicMean variable log10 revdb_recordcount set min libURLLastRHHeaders length xsltLoadStylesheetFromFile revZipRenameItem revXMLRPC_GetMethod libURLSetCustomHTTPHeaders popStdDev URLStatus libURLSetStatusCallback matchChunk revXMLNodeContents revDatabaseColumnIsNull randomBytes libURLftpUpload revMoveXMLNode add prepare revXMLRPC_GetPort value revZipDeleteItem revdb_moveprev xsltApplyStylesheet millisecs libUrlSetAuthCallback variableNames revZipAddItemWithFile revMoveToFirstRecord numToByte libUrlSetExpect100 libURLSetFTPMode revdb_movelast revZipCloseArchive revDatabaseColumnNamed sysError populationStandardDeviation revDeleteFolder peerAddress revOpenDatabases libURLftpUploadFile hasMemory revCopyFolder num revCloseDatabase revOpenDatabase median revGoURL libUrlMultipartFormAddPart keys revDatabaseConnectResult number numToChar vectorDotProduct ISOToMac revXMLParent libURLSetDriver revdb_columnlengths base64Decode revXMLRPC_DeleteAllDocuments libURLDownloadToFile revCreateXMLTree revRollBackDatabase revGetDatabaseDriverPath extension revDatabaseColumnCount revXMLPreviousSibling revZipCancel loadedExtensions revCopyFile revdb_currentrecord revCurrentRecordIsLast revXMLRPC_Error revQueryIsAtStart revZipReplaceItemWithFile xsltLoadStylesheet libURLErrorData"
    },
    contains: [
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join()),
      Mode(className: "keyword", begin: "\\bend\\sif\\b"),
      Mode(
          className: "function",
          beginKeywords: "function",
          end: "\$",
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join()),
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '2',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '1',
            ].join()),
            APOS_STRING_MODE,
            QUOTE_STRING_MODE,
            BINARY_NUMBER_MODE,
            C_NUMBER_MODE,
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '2',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '6',
            ].join())
          ]),
      Mode(
          className: "function",
          begin: "\\bend\\s+",
          end: "\$",
          keywords: [
            'e',
            'n',
            'd',
          ].join(),
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '2',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '1',
            ].join()),
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '2',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '6',
            ].join())
          ],
          relevance: 0),
      Mode(beginKeywords: "command on", end: "\$", contains: [
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '1',
        ].join()),
        APOS_STRING_MODE,
        QUOTE_STRING_MODE,
        BINARY_NUMBER_MODE,
        C_NUMBER_MODE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '2',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '6',
        ].join())
      ]),
      Mode(className: "meta", variants: [
        Mode(begin: "<\\?(rev|lc|livecode)", relevance: 10),
        Mode(begin: "<\\?"),
        Mode(begin: "\\?>")
      ]),
      APOS_STRING_MODE,
      QUOTE_STRING_MODE,
      BINARY_NUMBER_MODE,
      C_NUMBER_MODE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '2',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '6',
      ].join()),
      C_BLOCK_COMMENT_MODE,
      HASH_COMMENT_MODE,
      Mode(className: "comment", begin: "--", end: "\$", contains: [
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ]),
      Mode(className: "comment", begin: "[^:]//", end: "\$", contains: [
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ])
    ],
    illegal: ";\$|^\\[|^=|&|{");
