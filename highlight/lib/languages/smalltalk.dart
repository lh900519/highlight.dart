// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final smalltalk = Mode(
    refs: {
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '6',
      ].join(): Mode(className: "string", begin: "\\\$.{1}"),
      [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '5',
      ].join(): Mode(className: "symbol", begin: "#[a-zA-Z_]\\w*"),
    },
    aliases: ["st"],
    keywords: [
      's',
      'e',
      'l',
      'f',
      ' ',
      's',
      'u',
      'p',
      'e',
      'r',
      ' ',
      'n',
      'i',
      'l',
      ' ',
      't',
      'r',
      'u',
      'e',
      ' ',
      'f',
      'a',
      'l',
      's',
      'e',
      ' ',
      't',
      'h',
      'i',
      's',
      'C',
      'o',
      'n',
      't',
      'e',
      'x',
      't',
    ].join(),
    contains: [
      Mode(className: "comment", begin: "\"", end: "\"", contains: [
        PHRASAL_WORDS_MODE,
        Mode(
            className: "doctag",
            begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
            relevance: 0)
      ]),
      APOS_STRING_MODE,
      Mode(className: "type", begin: "\\b[A-Z][A-Za-z0-9_]*", relevance: 0),
      Mode(begin: "[a-z][a-zA-Z0-9_]*:", relevance: 0),
      C_NUMBER_MODE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '5',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '6',
      ].join()),
      Mode(
          begin: "\\|[ ]*[a-z][a-zA-Z0-9_]*([ ]+[a-z][a-zA-Z0-9_]*)*[ ]*\\|",
          returnBegin: true,
          end: "\\|",
          illegal: "\\S",
          contains: [Mode(begin: "(\\|[ ]*)?[a-z][a-zA-Z0-9_]*")]),
      Mode(begin: "\\#\\(", end: "\\)", contains: [
        APOS_STRING_MODE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '6',
        ].join()),
        C_NUMBER_MODE,
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '5',
        ].join())
      ])
    ]);
