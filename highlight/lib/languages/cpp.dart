// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final cpp = Mode(
  refs: {
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '6',
    ].join():
        Mode(className: "meta", begin: "#\\s*[a-z]+\\b", end: "\$", keywords: {
      "meta-keyword":
          "if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"
    }, contains: [
      Mode(begin: "\\\\\\n", relevance: 0),
      Mode(className: "meta-string", variants: [
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '0',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '1',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '2',
        ].join())
      ]),
      Mode(className: "meta-string", begin: "<.*?>", end: "\$", illegal: "\\n"),
      C_LINE_COMMENT_MODE,
      C_BLOCK_COMMENT_MODE
    ]),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      'v',
      'a',
      'r',
      'i',
      'a',
      'n',
      't',
      's',
      '~',
      '2',
    ].join():
        Mode(begin: "(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\((?:.|\\n)*?\\)\\1\""),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      'v',
      'a',
      'r',
      'i',
      'a',
      'n',
      't',
      's',
      '~',
      '1',
    ].join(): Mode(
        begin:
            "(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",
        end: "'",
        illegal: "."),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      'v',
      'a',
      'r',
      'i',
      'a',
      'n',
      't',
      's',
      '~',
      '0',
    ].join(): Mode(
        begin: "(u8?|U|L)?\"",
        end: "\"",
        illegal: "\\n",
        contains: [BACKSLASH_ESCAPE]),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
    ].join(): Mode(className: "string", variants: [
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '0',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '1',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
      ].join())
    ]),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
    ].join(): Mode(
        className: "number",
        variants: [
          Mode(begin: "\\b(0b[01']+)"),
          Mode(
              begin:
                  "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"),
          Mode(
              begin:
                  "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)")
        ],
        relevance: 0),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
    ].join(): Mode(className: "keyword", begin: "\\b[a-z\\d_]*_t\\b"),
  },
  aliases: ["c", "cc", "h", "c++", "h++", "hpp", "hh", "hxx", "cxx"],
  keywords: {
    "keyword":
        "signed explicit protected do case extern char union long typedef wchar_tshort concept unsigned delete continue void enum typename bitor bool private volatile compl atomic_long namespace alignas dynamic_cast|10 co_return bitand or atomic_schar final atomic_uint try else mutable decltype atomic_ullong virtual goto alignof double default module if const_cast|10 for import or_eq new atomic_int atomic_char atomic_ulong atomic_ushort atomic_uchar while atomic_short sizeof this not_eq throw register co_await switch static float xor_eq catch auto int noexcept restrict atomic_llong const atomic_bool static_cast|10 char8_t inline override friend xor return co_yield export operator constexpr static_assert using char16_t and thread_local not char32_t template consteval asm requires constinit and_eq reinterpret_cast|10 typeid public break",
    "built_in":
        "cout isdigit isalpha atan fprintf unordered_set exp cin acos clog istringstream fputs floor auto_ptr wstring bitset fmod stderr shared_ptr abs cos fabs log10 isgraph array ostringstream sin isxdigit malloc unordered_multimap stringstream labs _Complex iscntrl isupper stdout cerr realloc strcmp strchr vsprintf memcmp set deque stack strstr string unordered_multiset isspace free sscanf strcpy strcspn std vprintf list exit complex strspn sqrt _Imaginary abort vector unique_ptr terminate tolower fscanf vfprintf isalnum ldexp queue initializer_list multiset stdin multimap log map unordered_map atan2 puts snprintf asin modf isprint endl islower frexp strrchr ceil future calloc strpbrk scanf strcat _Bool tan strncat memcpy sprintf ispunct toupper strncpy memset memchr putchar imaginary tanh strlen sinh printf pow strncmp cosh",
    "literal": "NULL false nullptr true"
  },
  illegal: "</",
  contains: [
    Mode(variants: [
      Mode(begin: "=", end: ";"),
      Mode(begin: "\\(", end: "\\)"),
      Mode(beginKeywords: "new throw return else", end: ";")
    ], keywords: {
      "keyword":
          "typeid inline co_return throw atomic_char signed public register atomic_ushort private requires constinit and atomic_bool and_eq operator atomic_ulong friend constexpr atomic_schar do while sizeof protected not_eq using char32_t enum xor override atomic_short asm unsigned concept double else or_eq case typename co_await bool static long catch atomic_ullong try virtual or void if atomic_llong return import noexcept atomic_uchar decltype this int char default export dynamic_cast|10 switch auto delete atomic_long float bitor for wchar_tshort xor_eq new namespace alignof goto thread_local break typedef co_yield char8_t template atomic_int union alignas char16_t continue restrict explicit module reinterpret_cast|10 compl volatile static_cast|10 final consteval not static_assert const mutable bitand const_cast|10 extern atomic_uint",
      "built_in":
          "cout ldexp sscanf toupper _Imaginary strcspn puts endl snprintf strcpy putchar initializer_list vsprintf tolower isprint strcat tan printf scanf strncpy pow _Bool strncat tanh strlen isspace complex strpbrk strchr ispunct labs isupper log _Complex realloc unique_ptr strspn strstr auto_ptr strncmp multimap wstring imaginary cerr log10 fmod memcpy unordered_set multiset fabs terminate ceil deque calloc stderr cin fscanf fputs unordered_map abort exp unordered_multimap stringstream string fprintf bitset shared_ptr cos std acos stack istringstream exit atan2 isalnum cosh isdigit vector isalpha floor queue iscntrl abs stdin ostringstream stdout sin isxdigit future clog sqrt memcmp sprintf sinh list array vprintf modf map isgraph strrchr atan set frexp memset memchr asin strcmp vfprintf islower unordered_multiset free malloc",
      "literal": "false true nullptr NULL"
    }, contains: [
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join()),
      C_LINE_COMMENT_MODE,
      C_BLOCK_COMMENT_MODE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '3',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
      ].join()),
      Mode(
          begin: "\\(",
          end: "\\)",
          keywords: {
            "keyword":
                "goto atomic_ulong virtual inline enum co_await throw const atomic_schar using char8_t signed co_yield float restrict static_cast|10 export final catch do operator register and atomic_ushort default decltype typename char16_t try delete else static bitand return double explicit atomic_long thread_local bool new unsigned union or atomic_ullong dynamic_cast|10 consteval or_eq static_assert constinit typedef override this private bitor co_return friend compl xor_eq mutable atomic_short if char32_t atomic_char while not not_eq wchar_tshort asm atomic_uchar atomic_int and_eq xor switch namespace extern int atomic_llong char template alignof case requires const_cast|10 volatile continue alignas module noexcept for sizeof concept break void reinterpret_cast|10 atomic_uint atomic_bool constexpr long public import protected typeid auto",
            "built_in":
                "cin vsprintf strpbrk strlen _Complex log10 std memchr asin acos _Imaginary multimap stderr isalpha strcpy map memcpy floor vfprintf list endl deque string terminate sqrt multiset strcat unordered_multimap strspn memset isalnum puts isgraph wstring istringstream sscanf scanf unordered_multiset tanh tan abs set strcmp isupper cosh fmod ispunct printf unordered_map sin unordered_set exp strchr strncat strrchr iscntrl queue complex free snprintf malloc ostringstream cout cerr memcmp abort _Bool clog strncmp initializer_list calloc atan2 isxdigit realloc islower strncpy putchar vprintf stdin fabs log sinh isprint shared_ptr modf isspace strstr stringstream toupper array isdigit fprintf atan unique_ptr ceil strcspn exit vector cos bitset sprintf labs fputs stdout tolower fscanf imaginary ldexp auto_ptr frexp pow future stack",
            "literal": "true false NULL nullptr"
          },
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join()),
            C_LINE_COMMENT_MODE,
            C_BLOCK_COMMENT_MODE,
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '3',
            ].join()),
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '4',
            ].join()),
            Mode(self: true)
          ],
          relevance: 0)
    ], relevance: 0),
    Mode(
        className: "function",
        begin:
            "((decltype\\(auto\\)|(?:[a-zA-Z_]\\w*::)?[a-zA-Z_]\\w*(?:<.*?>)?)[\\*&\\s]+)+(?:[a-zA-Z_]\\w*::)?[a-zA-Z]\\w*\\s*\\(",
        returnBegin: true,
        end: "[{;=]",
        excludeEnd: true,
        keywords: {
          "keyword":
              "compl double typedef static char32_t case switch typename atomic_schar break explicit atomic_llong void catch int char atomic_uchar inline import alignof union or using atomic_ushort float virtual typeid namespace atomic_ulong final enum mutable xor char8_t static_cast|10 atomic_int unsigned continue atomic_ullong goto extern protected atomic_bool and thread_local signed co_yield default atomic_short bool else static_assert while new wchar_tshort alignas not auto try do private requires bitor this return char16_t constinit atomic_uint not_eq throw noexcept restrict constexpr and_eq const dynamic_cast|10 if concept asm operator delete reinterpret_cast|10 atomic_long template decltype bitand co_await volatile or_eq long public const_cast|10 export for sizeof register co_return module consteval atomic_char override xor_eq friend",
          "built_in":
              "log memset strrchr strcspn vprintf _Imaginary complex strcpy terminate tolower vsprintf memcpy cerr isgraph tan realloc auto_ptr calloc unique_ptr fscanf fmod fprintf strchr ispunct vfprintf map asin list cout sscanf abs bitset cosh cin _Complex log10 shared_ptr isspace atan sprintf deque multiset _Bool ldexp stdin memchr floor labs fputs istringstream stack strlen memcmp wstring scanf initializer_list isxdigit stdout strncpy multimap tanh clog stderr putchar queue pow isprint unordered_set islower exit snprintf isdigit string set isalpha strspn sinh strncmp unordered_multiset isupper sin strcmp strncat iscntrl atan2 fabs acos strcat isalnum exp sqrt unordered_map vector puts future free stringstream std ostringstream strstr imaginary abort endl cos modf strpbrk array toupper frexp malloc printf ceil unordered_multimap",
          "literal": "NULL nullptr false true"
        },
        illegal: "[^\\w\\s\\*&:<>]",
        contains: [
          Mode(
              begin: "decltype\\(auto\\)",
              keywords: {
                "keyword":
                    "atomic_short bitor char32_t continue else reinterpret_cast|10 enum module namespace try final alignof auto xor_eq volatile export noexcept return break co_await for char16_t co_return decltype constinit int friend case override sizeof extern char float explicit mutable import atomic_int bool double atomic_uchar switch atomic_ushort static_assert atomic_schar const typeid and union new bitand while private not virtual void static do compl typename goto atomic_ullong or_eq consteval wchar_tshort this concept not_eq default co_yield if alignas atomic_uint atomic_long restrict public or register atomic_char inline protected delete typedef unsigned atomic_ulong and_eq signed char8_t using static_cast|10 atomic_llong requires atomic_bool dynamic_cast|10 constexpr long xor operator thread_local throw catch const_cast|10 asm template",
                "built_in":
                    "atan ceil list memset initializer_list strspn isprint printf memcpy log strstr vprintf tolower stdin frexp sin strcmp strncmp strcspn sqrt strcat terminate asin complex unordered_map sprintf multiset labs strncat tan memchr strrchr _Imaginary multimap ldexp strcpy stack cin bitset sscanf sinh strncpy islower vsprintf vector cout free abort pow putchar isxdigit wstring endl abs stdout iscntrl shared_ptr strchr auto_ptr floor cos ispunct fprintf ostringstream vfprintf _Bool isalpha isgraph unordered_multimap calloc scanf cerr memcmp _Complex fmod puts imaginary array toupper realloc isupper atan2 strlen unordered_multiset clog isspace unique_ptr std fputs set modf log10 isdigit acos snprintf tanh istringstream unordered_set string strpbrk malloc exit exp future map queue fabs stringstream deque cosh stderr fscanf isalnum",
                "literal": "nullptr NULL false true"
              },
              relevance: 0),
          Mode(
              begin: "(?:[a-zA-Z_]\\w*::)?[a-zA-Z]\\w*\\s*\\(",
              returnBegin: true,
              contains: [
                Mode(
                    className: "title",
                    begin: "(?:[a-zA-Z_]\\w*::)?[a-zA-Z]\\w*",
                    relevance: 0)
              ],
              relevance: 0),
          Mode(
              className: "params",
              begin: "\\(",
              end: "\\)",
              keywords: {
                "keyword":
                    "decltype throw consteval xor_eq atomic_uint atomic_short sizeof co_yield xor wchar_tshort protected co_await return requires atomic_int enum this private if const_cast|10 goto long or_eq alignof atomic_uchar extern bool int import not_eq case inline catch restrict char8_t atomic_long public char signed volatile typeid void reinterpret_cast|10 using namespace module not auto default continue atomic_ullong atomic_llong bitor bitand noexcept do constexpr float switch dynamic_cast|10 delete register char16_t char32_t co_return static_cast|10 union template or while and typename override unsigned static for break double concept explicit try compl atomic_ulong else typedef friend export const alignas atomic_bool atomic_char virtual atomic_schar mutable atomic_ushort and_eq operator static_assert constinit asm thread_local new final",
                "built_in":
                    "isgraph initializer_list exit imaginary fprintf fmod free sinh terminate tolower unordered_multiset isalnum wstring cerr ldexp stringstream vector list multimap realloc endl abort atan complex calloc strlen snprintf toupper modf std strncpy memchr memcpy isalpha _Imaginary future cosh vsprintf strcmp deque isxdigit acos array cin isupper putchar printf istringstream fscanf stderr strncat _Complex tan shared_ptr isdigit frexp set unordered_map unordered_multimap ceil floor queue abs puts isspace atan2 exp cout map unordered_set memcmp _Bool multiset strchr tanh asin string fabs sqrt vfprintf scanf clog strcat stdin bitset strstr stdout cos fputs stack sscanf ostringstream ispunct auto_ptr isprint islower strspn strrchr strcspn pow sprintf malloc log log10 vprintf strpbrk labs unique_ptr memset strncmp sin strcpy iscntrl",
                "literal": "nullptr false NULL true"
              },
              relevance: 0,
              contains: [
                C_LINE_COMMENT_MODE,
                C_BLOCK_COMMENT_MODE,
                Mode(
                    ref: [
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '0',
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '4',
                ].join()),
                Mode(
                    ref: [
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '0',
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '3',
                ].join()),
                Mode(
                    ref: [
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '0',
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '0',
                ].join()),
                Mode(
                    begin: "\\(",
                    end: "\\)",
                    keywords: {
                      "keyword":
                          "else consteval delete sizeof static_assert new return long typename constexpr alignof enum operator explicit bitand atomic_ushort reinterpret_cast|10 atomic_long public namespace bitor template and wchar_tshort union xor_eq char16_t atomic_schar atomic_char atomic_bool using friend requires signed const_cast|10 typeid for goto asm alignas atomic_short char8_t atomic_ullong unsigned throw not_eq co_return atomic_uint not try while continue decltype final mutable constinit private or override xor thread_local dynamic_cast|10 noexcept virtual protected concept restrict float export compl atomic_uchar void atomic_int co_await and_eq switch atomic_ulong register co_yield do default char32_t auto this const char atomic_llong if import typedef case or_eq inline static int break extern static_cast|10 bool module volatile double catch",
                      "built_in":
                          "ispunct strstr sscanf strspn complex fscanf strlen tolower log log10 vector array vfprintf fabs _Bool islower fmod unordered_multiset unordered_multimap stdin scanf floor free printf multiset ostringstream set atan2 strcpy abort cerr _Imaginary bitset _Complex strrchr strcmp deque putchar isupper cosh abs cos cin clog vsprintf unordered_map toupper map strpbrk calloc auto_ptr isdigit pow tanh isspace memcpy strcat memcmp isgraph labs list realloc isalpha memset strncpy modf vprintf fprintf ceil unique_ptr puts wstring malloc asin acos imaginary exp iscntrl string strncmp fputs snprintf isprint istringstream frexp initializer_list endl terminate isalnum strcspn strchr atan stderr cout tan stringstream unordered_set std strncat stack sinh stdout multimap queue sqrt exit sin isxdigit shared_ptr future memchr ldexp sprintf",
                      "literal": "nullptr NULL false true"
                    },
                    relevance: 0,
                    contains: [
                      Mode(self: true),
                      C_LINE_COMMENT_MODE,
                      C_BLOCK_COMMENT_MODE,
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '0',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '4',
                      ].join()),
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '0',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '3',
                      ].join()),
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '0',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '0',
                      ].join())
                    ])
              ]),
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
          ].join()),
          C_LINE_COMMENT_MODE,
          C_BLOCK_COMMENT_MODE,
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '1',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '6',
          ].join())
        ]),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
    ].join()),
    C_LINE_COMMENT_MODE,
    C_BLOCK_COMMENT_MODE,
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '6',
    ].join()),
    Mode(
        begin:
            "\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",
        end: ">",
        keywords: {
          "keyword":
              "goto requires continue switch co_await constexpr using delete int bitor atomic_bool bool enum bitand new default atomic_uint consteval sizeof and_eq atomic_ullong constinit co_yield or_eq static_assert xor compl long final module template atomic_schar inline not co_return export thread_local typedef and atomic_uchar void unsigned char catch this or concept atomic_ulong xor_eq not_eq noexcept virtual alignof atomic_int volatile try decltype mutable atomic_ushort if atomic_char alignas atomic_llong override atomic_short atomic_long float const_cast|10 namespace throw typename restrict signed case protected import return static for char32_t else dynamic_cast|10 const operator public do char8_t union static_cast|10 char16_t reinterpret_cast|10 break auto while wchar_tshort private extern double asm friend explicit typeid register",
          "built_in":
              "complex isalpha wstring fscanf string iscntrl terminate asin stringstream future exit fputs cerr stderr free stdout exp floor fabs abs isgraph cosh clog queue cout cin toupper bitset tan isupper set stack auto_ptr vector cos sqrt islower unordered_multimap _Bool isdigit multimap istringstream unordered_set puts strrchr realloc stdin strcmp fprintf putchar array snprintf strpbrk _Complex unordered_multiset unique_ptr pow atan strchr modf endl multiset strncpy memset log10 ostringstream strcpy unordered_map printf isxdigit std atan2 acos ldexp malloc sinh memchr sscanf vprintf vfprintf vsprintf scanf strncmp strcat memcpy tanh strspn strcspn ispunct isprint _Imaginary strncat initializer_list log sprintf sin labs strstr strlen isspace tolower ceil abort shared_ptr fmod isalnum deque map memcmp calloc frexp list imaginary",
          "literal": "false NULL true nullptr"
        },
        contains: [
          Mode(self: true),
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
          ].join())
        ]),
    Mode(begin: "[a-zA-Z]\\w*::", keywords: {
      "keyword":
          "virtual int float atomic_ulong requires else static_cast|10 wchar_tshort for concept do operator continue and_eq default goto atomic_schar override char8_t static_assert compl long reinterpret_cast|10 atomic_long bitand noexcept decltype if co_await private inline atomic_uint atomic_short friend switch not_eq import xor alignof dynamic_cast|10 explicit signed double extern constexpr and break atomic_bool module char void typeid or co_return alignas atomic_char const const_cast|10 template catch typedef or_eq union final bool auto mutable namespace atomic_ullong throw thread_local public new register unsigned atomic_int consteval using atomic_uchar constinit try atomic_llong return this co_yield delete char32_t xor_eq atomic_ushort restrict not typename sizeof char16_t enum protected case while static export asm volatile bitor",
      "built_in":
          "strstr complex strncat _Complex vsprintf initializer_list strcspn islower sinh isspace abs isalnum unordered_multiset strrchr _Bool puts stdin vprintf cin sscanf putchar strcat acos tolower fputs isupper isprint istringstream stringstream ceil printf strcpy realloc cos wstring toupper labs fscanf list snprintf strncmp unique_ptr frexp isgraph memcmp vfprintf abort unordered_set log bitset strspn ostringstream exp log10 strlen endl string strcmp sprintf exit scanf map queue fprintf sin isdigit array tan isalpha stack strchr memchr strncpy sqrt free floor iscntrl fabs pow imaginary malloc calloc modf memcpy fmod shared_ptr cosh tanh deque stderr ispunct cerr _Imaginary clog cout strpbrk stdout isxdigit atan2 future multimap std terminate auto_ptr multiset set ldexp memset asin vector atan unordered_multimap unordered_map",
      "literal": "NULL false nullptr true"
    }),
    Mode(
        className: "class",
        beginKeywords: "class struct",
        end: "[{;:]",
        contains: [
          Mode(begin: "<", end: ">", contains: [Mode(self: true)]),
          TITLE_MODE
        ])
  ],
);
