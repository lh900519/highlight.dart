// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final cpp = Mode(
  refs: {
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '6',
    ].join():
        Mode(className: "meta", begin: "#\\s*[a-z]+\\b", end: "\$", keywords: {
      "meta-keyword":
          "if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"
    }, contains: [
      Mode(begin: "\\\\\\n", relevance: 0),
      Mode(className: "meta-string", variants: [
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '0',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '1',
        ].join()),
        Mode(
            ref: [
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '0',
          '~',
          'c',
          'o',
          'n',
          't',
          'a',
          'i',
          'n',
          's',
          '~',
          '4',
          '~',
          'v',
          'a',
          'r',
          'i',
          'a',
          'n',
          't',
          's',
          '~',
          '2',
        ].join())
      ]),
      Mode(className: "meta-string", begin: "<.*?>", end: "\$", illegal: "\\n"),
      C_LINE_COMMENT_MODE,
      C_BLOCK_COMMENT_MODE
    ]),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      'v',
      'a',
      'r',
      'i',
      'a',
      'n',
      't',
      's',
      '~',
      '2',
    ].join():
        Mode(begin: "(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\((?:.|\\n)*?\\)\\1\""),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      'v',
      'a',
      'r',
      'i',
      'a',
      'n',
      't',
      's',
      '~',
      '1',
    ].join(): Mode(
        begin:
            "(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",
        end: "'",
        illegal: "."),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
      '~',
      'v',
      'a',
      'r',
      'i',
      'a',
      'n',
      't',
      's',
      '~',
      '0',
    ].join(): Mode(
        begin: "(u8?|U|L)?\"",
        end: "\"",
        illegal: "\\n",
        contains: [BACKSLASH_ESCAPE]),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
    ].join(): Mode(className: "string", variants: [
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '0',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '1',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
        '~',
        'v',
        'a',
        'r',
        'i',
        'a',
        'n',
        't',
        's',
        '~',
        '2',
      ].join())
    ]),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
    ].join(): Mode(
        className: "number",
        variants: [
          Mode(begin: "\\b(0b[01']+)"),
          Mode(
              begin:
                  "(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)(u|U|l|L|ul|UL|f|F|b|B)"),
          Mode(
              begin:
                  "(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)")
        ],
        relevance: 0),
    [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
    ].join(): Mode(className: "keyword", begin: "\\b[a-z\\d_]*_t\\b"),
  },
  aliases: ["c", "cc", "h", "c++", "h++", "hpp", "hh", "hxx", "cxx"],
  keywords: {
    "keyword": [
      'int',
      'float',
      'while',
      'private',
      'char',
      'char8_t',
      'char16_t',
      'char32_t',
      'catch',
      'import',
      'module',
      'export',
      'virtual',
      'operator',
      'sizeof',
      'dynamic_cast|10',
      'typedef',
      'const_cast|10',
      'const',
      'for',
      'static_cast|10',
      'union',
      'namespace',
      'unsigned',
      'long',
      'volatile',
      'static',
      'protected',
      'bool',
      'template',
      'mutable',
      'if',
      'public',
      'friend',
      'do',
      'goto',
      'auto',
      'void',
      'enum',
      'else',
      'break',
      'extern',
      'using',
      'asm',
      'case',
      'typeid',
      'wchar_tshort',
      'reinterpret_cast|10',
      'default',
      'double',
      'register',
      'explicit',
      'signed',
      'typename',
      'try',
      'this',
      'switch',
      'continue',
      'inline',
      'delete',
      'alignas',
      'alignof',
      'constexpr',
      'consteval',
      'constinit',
      'decltype',
      'concept',
      'co_await',
      'co_return',
      'co_yield',
      'requires',
      'noexcept',
      'static_assert',
      'thread_local',
      'restrict',
      'final',
      'override',
      'atomic_bool',
      'atomic_char',
      'atomic_schar',
      'atomic_uchar',
      'atomic_short',
      'atomic_ushort',
      'atomic_int',
      'atomic_uint',
      'atomic_long',
      'atomic_ulong',
      'atomic_llong',
      'atomic_ullong',
      'new',
      'throw',
      'return',
      'and',
      'and_eq',
      'bitand',
      'bitor',
      'compl',
      'not',
      'not_eq',
      'or',
      'or_eq',
      'xor',
      'xor_eq',
    ].join(),
    "built_in": [
      'std',
      'string',
      'wstring',
      'cin',
      'cout',
      'cerr',
      'clog',
      'stdin',
      'stdout',
      'stderr',
      'stringstream',
      'istringstream',
      'ostringstream',
      'auto_ptr',
      'deque',
      'list',
      'queue',
      'stack',
      'vector',
      'map',
      'set',
      'bitset',
      'multiset',
      'multimap',
      'unordered_set',
      'unordered_map',
      'unordered_multiset',
      'unordered_multimap',
      'array',
      'shared_ptr',
      'abort',
      'terminate',
      'abs',
      'acos',
      'asin',
      'atan2',
      'atan',
      'calloc',
      'ceil',
      'cosh',
      'cos',
      'exit',
      'exp',
      'fabs',
      'floor',
      'fmod',
      'fprintf',
      'fputs',
      'free',
      'frexp',
      'fscanf',
      'future',
      'isalnum',
      'isalpha',
      'iscntrl',
      'isdigit',
      'isgraph',
      'islower',
      'isprint',
      'ispunct',
      'isspace',
      'isupper',
      'isxdigit',
      'tolower',
      'toupper',
      'labs',
      'ldexp',
      'log10',
      'log',
      'malloc',
      'realloc',
      'memchr',
      'memcmp',
      'memcpy',
      'memset',
      'modf',
      'pow',
      'printf',
      'putchar',
      'puts',
      'scanf',
      'sinh',
      'sin',
      'snprintf',
      'sprintf',
      'sqrt',
      'sscanf',
      'strcat',
      'strchr',
      'strcmp',
      'strcpy',
      'strcspn',
      'strlen',
      'strncat',
      'strncmp',
      'strncpy',
      'strpbrk',
      'strrchr',
      'strspn',
      'strstr',
      'tanh',
      'tan',
      'vfprintf',
      'vprintf',
      'vsprintf',
      'endl',
      'initializer_list',
      'unique_ptr',
      '_Bool',
      'complex',
      '_Complex',
      'imaginary',
      '_Imaginary',
    ].join(),
    "literal": [
      'true',
      'false',
      'nullptr',
      'NULL',
    ].join()
  },
  illegal: "</",
  contains: [
    Mode(variants: [
      Mode(begin: "=", end: ";"),
      Mode(begin: "\\(", end: "\\)"),
      Mode(beginKeywords: "new throw return else", end: ";")
    ], keywords: {
      "keyword": [
        'int',
        'float',
        'while',
        'private',
        'char',
        'char8_t',
        'char16_t',
        'char32_t',
        'catch',
        'import',
        'module',
        'export',
        'virtual',
        'operator',
        'sizeof',
        'dynamic_cast|10',
        'typedef',
        'const_cast|10',
        'const',
        'for',
        'static_cast|10',
        'union',
        'namespace',
        'unsigned',
        'long',
        'volatile',
        'static',
        'protected',
        'bool',
        'template',
        'mutable',
        'if',
        'public',
        'friend',
        'do',
        'goto',
        'auto',
        'void',
        'enum',
        'else',
        'break',
        'extern',
        'using',
        'asm',
        'case',
        'typeid',
        'wchar_tshort',
        'reinterpret_cast|10',
        'default',
        'double',
        'register',
        'explicit',
        'signed',
        'typename',
        'try',
        'this',
        'switch',
        'continue',
        'inline',
        'delete',
        'alignas',
        'alignof',
        'constexpr',
        'consteval',
        'constinit',
        'decltype',
        'concept',
        'co_await',
        'co_return',
        'co_yield',
        'requires',
        'noexcept',
        'static_assert',
        'thread_local',
        'restrict',
        'final',
        'override',
        'atomic_bool',
        'atomic_char',
        'atomic_schar',
        'atomic_uchar',
        'atomic_short',
        'atomic_ushort',
        'atomic_int',
        'atomic_uint',
        'atomic_long',
        'atomic_ulong',
        'atomic_llong',
        'atomic_ullong',
        'new',
        'throw',
        'return',
        'and',
        'and_eq',
        'bitand',
        'bitor',
        'compl',
        'not',
        'not_eq',
        'or',
        'or_eq',
        'xor',
        'xor_eq',
      ].join(),
      "built_in": [
        'std',
        'string',
        'wstring',
        'cin',
        'cout',
        'cerr',
        'clog',
        'stdin',
        'stdout',
        'stderr',
        'stringstream',
        'istringstream',
        'ostringstream',
        'auto_ptr',
        'deque',
        'list',
        'queue',
        'stack',
        'vector',
        'map',
        'set',
        'bitset',
        'multiset',
        'multimap',
        'unordered_set',
        'unordered_map',
        'unordered_multiset',
        'unordered_multimap',
        'array',
        'shared_ptr',
        'abort',
        'terminate',
        'abs',
        'acos',
        'asin',
        'atan2',
        'atan',
        'calloc',
        'ceil',
        'cosh',
        'cos',
        'exit',
        'exp',
        'fabs',
        'floor',
        'fmod',
        'fprintf',
        'fputs',
        'free',
        'frexp',
        'fscanf',
        'future',
        'isalnum',
        'isalpha',
        'iscntrl',
        'isdigit',
        'isgraph',
        'islower',
        'isprint',
        'ispunct',
        'isspace',
        'isupper',
        'isxdigit',
        'tolower',
        'toupper',
        'labs',
        'ldexp',
        'log10',
        'log',
        'malloc',
        'realloc',
        'memchr',
        'memcmp',
        'memcpy',
        'memset',
        'modf',
        'pow',
        'printf',
        'putchar',
        'puts',
        'scanf',
        'sinh',
        'sin',
        'snprintf',
        'sprintf',
        'sqrt',
        'sscanf',
        'strcat',
        'strchr',
        'strcmp',
        'strcpy',
        'strcspn',
        'strlen',
        'strncat',
        'strncmp',
        'strncpy',
        'strpbrk',
        'strrchr',
        'strspn',
        'strstr',
        'tanh',
        'tan',
        'vfprintf',
        'vprintf',
        'vsprintf',
        'endl',
        'initializer_list',
        'unique_ptr',
        '_Bool',
        'complex',
        '_Complex',
        'imaginary',
        '_Imaginary',
      ].join(),
      "literal": [
        'true',
        'false',
        'nullptr',
        'NULL',
      ].join()
    }, contains: [
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
      ].join()),
      C_LINE_COMMENT_MODE,
      C_BLOCK_COMMENT_MODE,
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '3',
      ].join()),
      Mode(
          ref: [
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '0',
        '~',
        'c',
        'o',
        'n',
        't',
        'a',
        'i',
        'n',
        's',
        '~',
        '4',
      ].join()),
      Mode(
          begin: "\\(",
          end: "\\)",
          keywords: {
            "keyword": [
              'int',
              'float',
              'while',
              'private',
              'char',
              'char8_t',
              'char16_t',
              'char32_t',
              'catch',
              'import',
              'module',
              'export',
              'virtual',
              'operator',
              'sizeof',
              'dynamic_cast|10',
              'typedef',
              'const_cast|10',
              'const',
              'for',
              'static_cast|10',
              'union',
              'namespace',
              'unsigned',
              'long',
              'volatile',
              'static',
              'protected',
              'bool',
              'template',
              'mutable',
              'if',
              'public',
              'friend',
              'do',
              'goto',
              'auto',
              'void',
              'enum',
              'else',
              'break',
              'extern',
              'using',
              'asm',
              'case',
              'typeid',
              'wchar_tshort',
              'reinterpret_cast|10',
              'default',
              'double',
              'register',
              'explicit',
              'signed',
              'typename',
              'try',
              'this',
              'switch',
              'continue',
              'inline',
              'delete',
              'alignas',
              'alignof',
              'constexpr',
              'consteval',
              'constinit',
              'decltype',
              'concept',
              'co_await',
              'co_return',
              'co_yield',
              'requires',
              'noexcept',
              'static_assert',
              'thread_local',
              'restrict',
              'final',
              'override',
              'atomic_bool',
              'atomic_char',
              'atomic_schar',
              'atomic_uchar',
              'atomic_short',
              'atomic_ushort',
              'atomic_int',
              'atomic_uint',
              'atomic_long',
              'atomic_ulong',
              'atomic_llong',
              'atomic_ullong',
              'new',
              'throw',
              'return',
              'and',
              'and_eq',
              'bitand',
              'bitor',
              'compl',
              'not',
              'not_eq',
              'or',
              'or_eq',
              'xor',
              'xor_eq',
            ].join(),
            "built_in": [
              'std',
              'string',
              'wstring',
              'cin',
              'cout',
              'cerr',
              'clog',
              'stdin',
              'stdout',
              'stderr',
              'stringstream',
              'istringstream',
              'ostringstream',
              'auto_ptr',
              'deque',
              'list',
              'queue',
              'stack',
              'vector',
              'map',
              'set',
              'bitset',
              'multiset',
              'multimap',
              'unordered_set',
              'unordered_map',
              'unordered_multiset',
              'unordered_multimap',
              'array',
              'shared_ptr',
              'abort',
              'terminate',
              'abs',
              'acos',
              'asin',
              'atan2',
              'atan',
              'calloc',
              'ceil',
              'cosh',
              'cos',
              'exit',
              'exp',
              'fabs',
              'floor',
              'fmod',
              'fprintf',
              'fputs',
              'free',
              'frexp',
              'fscanf',
              'future',
              'isalnum',
              'isalpha',
              'iscntrl',
              'isdigit',
              'isgraph',
              'islower',
              'isprint',
              'ispunct',
              'isspace',
              'isupper',
              'isxdigit',
              'tolower',
              'toupper',
              'labs',
              'ldexp',
              'log10',
              'log',
              'malloc',
              'realloc',
              'memchr',
              'memcmp',
              'memcpy',
              'memset',
              'modf',
              'pow',
              'printf',
              'putchar',
              'puts',
              'scanf',
              'sinh',
              'sin',
              'snprintf',
              'sprintf',
              'sqrt',
              'sscanf',
              'strcat',
              'strchr',
              'strcmp',
              'strcpy',
              'strcspn',
              'strlen',
              'strncat',
              'strncmp',
              'strncpy',
              'strpbrk',
              'strrchr',
              'strspn',
              'strstr',
              'tanh',
              'tan',
              'vfprintf',
              'vprintf',
              'vsprintf',
              'endl',
              'initializer_list',
              'unique_ptr',
              '_Bool',
              'complex',
              '_Complex',
              'imaginary',
              '_Imaginary',
            ].join(),
            "literal": [
              'true',
              'false',
              'nullptr',
              'NULL',
            ].join()
          },
          contains: [
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
            ].join()),
            C_LINE_COMMENT_MODE,
            C_BLOCK_COMMENT_MODE,
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '3',
            ].join()),
            Mode(
                ref: [
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '0',
              '~',
              'c',
              'o',
              'n',
              't',
              'a',
              'i',
              'n',
              's',
              '~',
              '4',
            ].join()),
            Mode(self: true)
          ],
          relevance: 0)
    ], relevance: 0),
    Mode(
        className: "function",
        begin:
            "((decltype\\(auto\\)|(?:[a-zA-Z_]\\w*::)?[a-zA-Z_]\\w*(?:<.*?>)?)[\\*&\\s]+)+(?:[a-zA-Z_]\\w*::)?[a-zA-Z]\\w*\\s*\\(",
        returnBegin: true,
        end: "[{;=]",
        excludeEnd: true,
        keywords: {
          "keyword": [
            'int',
            'float',
            'while',
            'private',
            'char',
            'char8_t',
            'char16_t',
            'char32_t',
            'catch',
            'import',
            'module',
            'export',
            'virtual',
            'operator',
            'sizeof',
            'dynamic_cast|10',
            'typedef',
            'const_cast|10',
            'const',
            'for',
            'static_cast|10',
            'union',
            'namespace',
            'unsigned',
            'long',
            'volatile',
            'static',
            'protected',
            'bool',
            'template',
            'mutable',
            'if',
            'public',
            'friend',
            'do',
            'goto',
            'auto',
            'void',
            'enum',
            'else',
            'break',
            'extern',
            'using',
            'asm',
            'case',
            'typeid',
            'wchar_tshort',
            'reinterpret_cast|10',
            'default',
            'double',
            'register',
            'explicit',
            'signed',
            'typename',
            'try',
            'this',
            'switch',
            'continue',
            'inline',
            'delete',
            'alignas',
            'alignof',
            'constexpr',
            'consteval',
            'constinit',
            'decltype',
            'concept',
            'co_await',
            'co_return',
            'co_yield',
            'requires',
            'noexcept',
            'static_assert',
            'thread_local',
            'restrict',
            'final',
            'override',
            'atomic_bool',
            'atomic_char',
            'atomic_schar',
            'atomic_uchar',
            'atomic_short',
            'atomic_ushort',
            'atomic_int',
            'atomic_uint',
            'atomic_long',
            'atomic_ulong',
            'atomic_llong',
            'atomic_ullong',
            'new',
            'throw',
            'return',
            'and',
            'and_eq',
            'bitand',
            'bitor',
            'compl',
            'not',
            'not_eq',
            'or',
            'or_eq',
            'xor',
            'xor_eq',
          ].join(),
          "built_in": [
            'std',
            'string',
            'wstring',
            'cin',
            'cout',
            'cerr',
            'clog',
            'stdin',
            'stdout',
            'stderr',
            'stringstream',
            'istringstream',
            'ostringstream',
            'auto_ptr',
            'deque',
            'list',
            'queue',
            'stack',
            'vector',
            'map',
            'set',
            'bitset',
            'multiset',
            'multimap',
            'unordered_set',
            'unordered_map',
            'unordered_multiset',
            'unordered_multimap',
            'array',
            'shared_ptr',
            'abort',
            'terminate',
            'abs',
            'acos',
            'asin',
            'atan2',
            'atan',
            'calloc',
            'ceil',
            'cosh',
            'cos',
            'exit',
            'exp',
            'fabs',
            'floor',
            'fmod',
            'fprintf',
            'fputs',
            'free',
            'frexp',
            'fscanf',
            'future',
            'isalnum',
            'isalpha',
            'iscntrl',
            'isdigit',
            'isgraph',
            'islower',
            'isprint',
            'ispunct',
            'isspace',
            'isupper',
            'isxdigit',
            'tolower',
            'toupper',
            'labs',
            'ldexp',
            'log10',
            'log',
            'malloc',
            'realloc',
            'memchr',
            'memcmp',
            'memcpy',
            'memset',
            'modf',
            'pow',
            'printf',
            'putchar',
            'puts',
            'scanf',
            'sinh',
            'sin',
            'snprintf',
            'sprintf',
            'sqrt',
            'sscanf',
            'strcat',
            'strchr',
            'strcmp',
            'strcpy',
            'strcspn',
            'strlen',
            'strncat',
            'strncmp',
            'strncpy',
            'strpbrk',
            'strrchr',
            'strspn',
            'strstr',
            'tanh',
            'tan',
            'vfprintf',
            'vprintf',
            'vsprintf',
            'endl',
            'initializer_list',
            'unique_ptr',
            '_Bool',
            'complex',
            '_Complex',
            'imaginary',
            '_Imaginary',
          ].join(),
          "literal": [
            'true',
            'false',
            'nullptr',
            'NULL',
          ].join()
        },
        illegal: "[^\\w\\s\\*&:<>]",
        contains: [
          Mode(
              begin: "decltype\\(auto\\)",
              keywords: {
                "keyword": [
                  'int',
                  'float',
                  'while',
                  'private',
                  'char',
                  'char8_t',
                  'char16_t',
                  'char32_t',
                  'catch',
                  'import',
                  'module',
                  'export',
                  'virtual',
                  'operator',
                  'sizeof',
                  'dynamic_cast|10',
                  'typedef',
                  'const_cast|10',
                  'const',
                  'for',
                  'static_cast|10',
                  'union',
                  'namespace',
                  'unsigned',
                  'long',
                  'volatile',
                  'static',
                  'protected',
                  'bool',
                  'template',
                  'mutable',
                  'if',
                  'public',
                  'friend',
                  'do',
                  'goto',
                  'auto',
                  'void',
                  'enum',
                  'else',
                  'break',
                  'extern',
                  'using',
                  'asm',
                  'case',
                  'typeid',
                  'wchar_tshort',
                  'reinterpret_cast|10',
                  'default',
                  'double',
                  'register',
                  'explicit',
                  'signed',
                  'typename',
                  'try',
                  'this',
                  'switch',
                  'continue',
                  'inline',
                  'delete',
                  'alignas',
                  'alignof',
                  'constexpr',
                  'consteval',
                  'constinit',
                  'decltype',
                  'concept',
                  'co_await',
                  'co_return',
                  'co_yield',
                  'requires',
                  'noexcept',
                  'static_assert',
                  'thread_local',
                  'restrict',
                  'final',
                  'override',
                  'atomic_bool',
                  'atomic_char',
                  'atomic_schar',
                  'atomic_uchar',
                  'atomic_short',
                  'atomic_ushort',
                  'atomic_int',
                  'atomic_uint',
                  'atomic_long',
                  'atomic_ulong',
                  'atomic_llong',
                  'atomic_ullong',
                  'new',
                  'throw',
                  'return',
                  'and',
                  'and_eq',
                  'bitand',
                  'bitor',
                  'compl',
                  'not',
                  'not_eq',
                  'or',
                  'or_eq',
                  'xor',
                  'xor_eq',
                ].join(),
                "built_in": [
                  'std',
                  'string',
                  'wstring',
                  'cin',
                  'cout',
                  'cerr',
                  'clog',
                  'stdin',
                  'stdout',
                  'stderr',
                  'stringstream',
                  'istringstream',
                  'ostringstream',
                  'auto_ptr',
                  'deque',
                  'list',
                  'queue',
                  'stack',
                  'vector',
                  'map',
                  'set',
                  'bitset',
                  'multiset',
                  'multimap',
                  'unordered_set',
                  'unordered_map',
                  'unordered_multiset',
                  'unordered_multimap',
                  'array',
                  'shared_ptr',
                  'abort',
                  'terminate',
                  'abs',
                  'acos',
                  'asin',
                  'atan2',
                  'atan',
                  'calloc',
                  'ceil',
                  'cosh',
                  'cos',
                  'exit',
                  'exp',
                  'fabs',
                  'floor',
                  'fmod',
                  'fprintf',
                  'fputs',
                  'free',
                  'frexp',
                  'fscanf',
                  'future',
                  'isalnum',
                  'isalpha',
                  'iscntrl',
                  'isdigit',
                  'isgraph',
                  'islower',
                  'isprint',
                  'ispunct',
                  'isspace',
                  'isupper',
                  'isxdigit',
                  'tolower',
                  'toupper',
                  'labs',
                  'ldexp',
                  'log10',
                  'log',
                  'malloc',
                  'realloc',
                  'memchr',
                  'memcmp',
                  'memcpy',
                  'memset',
                  'modf',
                  'pow',
                  'printf',
                  'putchar',
                  'puts',
                  'scanf',
                  'sinh',
                  'sin',
                  'snprintf',
                  'sprintf',
                  'sqrt',
                  'sscanf',
                  'strcat',
                  'strchr',
                  'strcmp',
                  'strcpy',
                  'strcspn',
                  'strlen',
                  'strncat',
                  'strncmp',
                  'strncpy',
                  'strpbrk',
                  'strrchr',
                  'strspn',
                  'strstr',
                  'tanh',
                  'tan',
                  'vfprintf',
                  'vprintf',
                  'vsprintf',
                  'endl',
                  'initializer_list',
                  'unique_ptr',
                  '_Bool',
                  'complex',
                  '_Complex',
                  'imaginary',
                  '_Imaginary',
                ].join(),
                "literal": [
                  'true',
                  'false',
                  'nullptr',
                  'NULL',
                ].join()
              },
              relevance: 0),
          Mode(
              begin: "(?:[a-zA-Z_]\\w*::)?[a-zA-Z]\\w*\\s*\\(",
              returnBegin: true,
              contains: [
                Mode(
                    className: "title",
                    begin: "(?:[a-zA-Z_]\\w*::)?[a-zA-Z]\\w*",
                    relevance: 0)
              ],
              relevance: 0),
          Mode(
              className: "params",
              begin: "\\(",
              end: "\\)",
              keywords: {
                "keyword": [
                  'int',
                  'float',
                  'while',
                  'private',
                  'char',
                  'char8_t',
                  'char16_t',
                  'char32_t',
                  'catch',
                  'import',
                  'module',
                  'export',
                  'virtual',
                  'operator',
                  'sizeof',
                  'dynamic_cast|10',
                  'typedef',
                  'const_cast|10',
                  'const',
                  'for',
                  'static_cast|10',
                  'union',
                  'namespace',
                  'unsigned',
                  'long',
                  'volatile',
                  'static',
                  'protected',
                  'bool',
                  'template',
                  'mutable',
                  'if',
                  'public',
                  'friend',
                  'do',
                  'goto',
                  'auto',
                  'void',
                  'enum',
                  'else',
                  'break',
                  'extern',
                  'using',
                  'asm',
                  'case',
                  'typeid',
                  'wchar_tshort',
                  'reinterpret_cast|10',
                  'default',
                  'double',
                  'register',
                  'explicit',
                  'signed',
                  'typename',
                  'try',
                  'this',
                  'switch',
                  'continue',
                  'inline',
                  'delete',
                  'alignas',
                  'alignof',
                  'constexpr',
                  'consteval',
                  'constinit',
                  'decltype',
                  'concept',
                  'co_await',
                  'co_return',
                  'co_yield',
                  'requires',
                  'noexcept',
                  'static_assert',
                  'thread_local',
                  'restrict',
                  'final',
                  'override',
                  'atomic_bool',
                  'atomic_char',
                  'atomic_schar',
                  'atomic_uchar',
                  'atomic_short',
                  'atomic_ushort',
                  'atomic_int',
                  'atomic_uint',
                  'atomic_long',
                  'atomic_ulong',
                  'atomic_llong',
                  'atomic_ullong',
                  'new',
                  'throw',
                  'return',
                  'and',
                  'and_eq',
                  'bitand',
                  'bitor',
                  'compl',
                  'not',
                  'not_eq',
                  'or',
                  'or_eq',
                  'xor',
                  'xor_eq',
                ].join(),
                "built_in": [
                  'std',
                  'string',
                  'wstring',
                  'cin',
                  'cout',
                  'cerr',
                  'clog',
                  'stdin',
                  'stdout',
                  'stderr',
                  'stringstream',
                  'istringstream',
                  'ostringstream',
                  'auto_ptr',
                  'deque',
                  'list',
                  'queue',
                  'stack',
                  'vector',
                  'map',
                  'set',
                  'bitset',
                  'multiset',
                  'multimap',
                  'unordered_set',
                  'unordered_map',
                  'unordered_multiset',
                  'unordered_multimap',
                  'array',
                  'shared_ptr',
                  'abort',
                  'terminate',
                  'abs',
                  'acos',
                  'asin',
                  'atan2',
                  'atan',
                  'calloc',
                  'ceil',
                  'cosh',
                  'cos',
                  'exit',
                  'exp',
                  'fabs',
                  'floor',
                  'fmod',
                  'fprintf',
                  'fputs',
                  'free',
                  'frexp',
                  'fscanf',
                  'future',
                  'isalnum',
                  'isalpha',
                  'iscntrl',
                  'isdigit',
                  'isgraph',
                  'islower',
                  'isprint',
                  'ispunct',
                  'isspace',
                  'isupper',
                  'isxdigit',
                  'tolower',
                  'toupper',
                  'labs',
                  'ldexp',
                  'log10',
                  'log',
                  'malloc',
                  'realloc',
                  'memchr',
                  'memcmp',
                  'memcpy',
                  'memset',
                  'modf',
                  'pow',
                  'printf',
                  'putchar',
                  'puts',
                  'scanf',
                  'sinh',
                  'sin',
                  'snprintf',
                  'sprintf',
                  'sqrt',
                  'sscanf',
                  'strcat',
                  'strchr',
                  'strcmp',
                  'strcpy',
                  'strcspn',
                  'strlen',
                  'strncat',
                  'strncmp',
                  'strncpy',
                  'strpbrk',
                  'strrchr',
                  'strspn',
                  'strstr',
                  'tanh',
                  'tan',
                  'vfprintf',
                  'vprintf',
                  'vsprintf',
                  'endl',
                  'initializer_list',
                  'unique_ptr',
                  '_Bool',
                  'complex',
                  '_Complex',
                  'imaginary',
                  '_Imaginary',
                ].join(),
                "literal": [
                  'true',
                  'false',
                  'nullptr',
                  'NULL',
                ].join()
              },
              relevance: 0,
              contains: [
                C_LINE_COMMENT_MODE,
                C_BLOCK_COMMENT_MODE,
                Mode(
                    ref: [
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '0',
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '4',
                ].join()),
                Mode(
                    ref: [
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '0',
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '3',
                ].join()),
                Mode(
                    ref: [
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '0',
                  '~',
                  'c',
                  'o',
                  'n',
                  't',
                  'a',
                  'i',
                  'n',
                  's',
                  '~',
                  '0',
                ].join()),
                Mode(
                    begin: "\\(",
                    end: "\\)",
                    keywords: {
                      "keyword": [
                        'int',
                        'float',
                        'while',
                        'private',
                        'char',
                        'char8_t',
                        'char16_t',
                        'char32_t',
                        'catch',
                        'import',
                        'module',
                        'export',
                        'virtual',
                        'operator',
                        'sizeof',
                        'dynamic_cast|10',
                        'typedef',
                        'const_cast|10',
                        'const',
                        'for',
                        'static_cast|10',
                        'union',
                        'namespace',
                        'unsigned',
                        'long',
                        'volatile',
                        'static',
                        'protected',
                        'bool',
                        'template',
                        'mutable',
                        'if',
                        'public',
                        'friend',
                        'do',
                        'goto',
                        'auto',
                        'void',
                        'enum',
                        'else',
                        'break',
                        'extern',
                        'using',
                        'asm',
                        'case',
                        'typeid',
                        'wchar_tshort',
                        'reinterpret_cast|10',
                        'default',
                        'double',
                        'register',
                        'explicit',
                        'signed',
                        'typename',
                        'try',
                        'this',
                        'switch',
                        'continue',
                        'inline',
                        'delete',
                        'alignas',
                        'alignof',
                        'constexpr',
                        'consteval',
                        'constinit',
                        'decltype',
                        'concept',
                        'co_await',
                        'co_return',
                        'co_yield',
                        'requires',
                        'noexcept',
                        'static_assert',
                        'thread_local',
                        'restrict',
                        'final',
                        'override',
                        'atomic_bool',
                        'atomic_char',
                        'atomic_schar',
                        'atomic_uchar',
                        'atomic_short',
                        'atomic_ushort',
                        'atomic_int',
                        'atomic_uint',
                        'atomic_long',
                        'atomic_ulong',
                        'atomic_llong',
                        'atomic_ullong',
                        'new',
                        'throw',
                        'return',
                        'and',
                        'and_eq',
                        'bitand',
                        'bitor',
                        'compl',
                        'not',
                        'not_eq',
                        'or',
                        'or_eq',
                        'xor',
                        'xor_eq',
                      ].join(),
                      "built_in": [
                        'std',
                        'string',
                        'wstring',
                        'cin',
                        'cout',
                        'cerr',
                        'clog',
                        'stdin',
                        'stdout',
                        'stderr',
                        'stringstream',
                        'istringstream',
                        'ostringstream',
                        'auto_ptr',
                        'deque',
                        'list',
                        'queue',
                        'stack',
                        'vector',
                        'map',
                        'set',
                        'bitset',
                        'multiset',
                        'multimap',
                        'unordered_set',
                        'unordered_map',
                        'unordered_multiset',
                        'unordered_multimap',
                        'array',
                        'shared_ptr',
                        'abort',
                        'terminate',
                        'abs',
                        'acos',
                        'asin',
                        'atan2',
                        'atan',
                        'calloc',
                        'ceil',
                        'cosh',
                        'cos',
                        'exit',
                        'exp',
                        'fabs',
                        'floor',
                        'fmod',
                        'fprintf',
                        'fputs',
                        'free',
                        'frexp',
                        'fscanf',
                        'future',
                        'isalnum',
                        'isalpha',
                        'iscntrl',
                        'isdigit',
                        'isgraph',
                        'islower',
                        'isprint',
                        'ispunct',
                        'isspace',
                        'isupper',
                        'isxdigit',
                        'tolower',
                        'toupper',
                        'labs',
                        'ldexp',
                        'log10',
                        'log',
                        'malloc',
                        'realloc',
                        'memchr',
                        'memcmp',
                        'memcpy',
                        'memset',
                        'modf',
                        'pow',
                        'printf',
                        'putchar',
                        'puts',
                        'scanf',
                        'sinh',
                        'sin',
                        'snprintf',
                        'sprintf',
                        'sqrt',
                        'sscanf',
                        'strcat',
                        'strchr',
                        'strcmp',
                        'strcpy',
                        'strcspn',
                        'strlen',
                        'strncat',
                        'strncmp',
                        'strncpy',
                        'strpbrk',
                        'strrchr',
                        'strspn',
                        'strstr',
                        'tanh',
                        'tan',
                        'vfprintf',
                        'vprintf',
                        'vsprintf',
                        'endl',
                        'initializer_list',
                        'unique_ptr',
                        '_Bool',
                        'complex',
                        '_Complex',
                        'imaginary',
                        '_Imaginary',
                      ].join(),
                      "literal": [
                        'true',
                        'false',
                        'nullptr',
                        'NULL',
                      ].join()
                    },
                    relevance: 0,
                    contains: [
                      Mode(self: true),
                      C_LINE_COMMENT_MODE,
                      C_BLOCK_COMMENT_MODE,
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '0',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '4',
                      ].join()),
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '0',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '3',
                      ].join()),
                      Mode(
                          ref: [
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '0',
                        '~',
                        'c',
                        'o',
                        'n',
                        't',
                        'a',
                        'i',
                        'n',
                        's',
                        '~',
                        '0',
                      ].join())
                    ])
              ]),
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
          ].join()),
          C_LINE_COMMENT_MODE,
          C_BLOCK_COMMENT_MODE,
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '1',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '6',
          ].join())
        ]),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
    ].join()),
    C_LINE_COMMENT_MODE,
    C_BLOCK_COMMENT_MODE,
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '3',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '0',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '4',
    ].join()),
    Mode(
        ref: [
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '1',
      '~',
      'c',
      'o',
      'n',
      't',
      'a',
      'i',
      'n',
      's',
      '~',
      '6',
    ].join()),
    Mode(
        begin:
            "\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\s*<",
        end: ">",
        keywords: {
          "keyword": [
            'int',
            'float',
            'while',
            'private',
            'char',
            'char8_t',
            'char16_t',
            'char32_t',
            'catch',
            'import',
            'module',
            'export',
            'virtual',
            'operator',
            'sizeof',
            'dynamic_cast|10',
            'typedef',
            'const_cast|10',
            'const',
            'for',
            'static_cast|10',
            'union',
            'namespace',
            'unsigned',
            'long',
            'volatile',
            'static',
            'protected',
            'bool',
            'template',
            'mutable',
            'if',
            'public',
            'friend',
            'do',
            'goto',
            'auto',
            'void',
            'enum',
            'else',
            'break',
            'extern',
            'using',
            'asm',
            'case',
            'typeid',
            'wchar_tshort',
            'reinterpret_cast|10',
            'default',
            'double',
            'register',
            'explicit',
            'signed',
            'typename',
            'try',
            'this',
            'switch',
            'continue',
            'inline',
            'delete',
            'alignas',
            'alignof',
            'constexpr',
            'consteval',
            'constinit',
            'decltype',
            'concept',
            'co_await',
            'co_return',
            'co_yield',
            'requires',
            'noexcept',
            'static_assert',
            'thread_local',
            'restrict',
            'final',
            'override',
            'atomic_bool',
            'atomic_char',
            'atomic_schar',
            'atomic_uchar',
            'atomic_short',
            'atomic_ushort',
            'atomic_int',
            'atomic_uint',
            'atomic_long',
            'atomic_ulong',
            'atomic_llong',
            'atomic_ullong',
            'new',
            'throw',
            'return',
            'and',
            'and_eq',
            'bitand',
            'bitor',
            'compl',
            'not',
            'not_eq',
            'or',
            'or_eq',
            'xor',
            'xor_eq',
          ].join(),
          "built_in": [
            'std',
            'string',
            'wstring',
            'cin',
            'cout',
            'cerr',
            'clog',
            'stdin',
            'stdout',
            'stderr',
            'stringstream',
            'istringstream',
            'ostringstream',
            'auto_ptr',
            'deque',
            'list',
            'queue',
            'stack',
            'vector',
            'map',
            'set',
            'bitset',
            'multiset',
            'multimap',
            'unordered_set',
            'unordered_map',
            'unordered_multiset',
            'unordered_multimap',
            'array',
            'shared_ptr',
            'abort',
            'terminate',
            'abs',
            'acos',
            'asin',
            'atan2',
            'atan',
            'calloc',
            'ceil',
            'cosh',
            'cos',
            'exit',
            'exp',
            'fabs',
            'floor',
            'fmod',
            'fprintf',
            'fputs',
            'free',
            'frexp',
            'fscanf',
            'future',
            'isalnum',
            'isalpha',
            'iscntrl',
            'isdigit',
            'isgraph',
            'islower',
            'isprint',
            'ispunct',
            'isspace',
            'isupper',
            'isxdigit',
            'tolower',
            'toupper',
            'labs',
            'ldexp',
            'log10',
            'log',
            'malloc',
            'realloc',
            'memchr',
            'memcmp',
            'memcpy',
            'memset',
            'modf',
            'pow',
            'printf',
            'putchar',
            'puts',
            'scanf',
            'sinh',
            'sin',
            'snprintf',
            'sprintf',
            'sqrt',
            'sscanf',
            'strcat',
            'strchr',
            'strcmp',
            'strcpy',
            'strcspn',
            'strlen',
            'strncat',
            'strncmp',
            'strncpy',
            'strpbrk',
            'strrchr',
            'strspn',
            'strstr',
            'tanh',
            'tan',
            'vfprintf',
            'vprintf',
            'vsprintf',
            'endl',
            'initializer_list',
            'unique_ptr',
            '_Bool',
            'complex',
            '_Complex',
            'imaginary',
            '_Imaginary',
          ].join(),
          "literal": [
            'true',
            'false',
            'nullptr',
            'NULL',
          ].join()
        },
        contains: [
          Mode(self: true),
          Mode(
              ref: [
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
            '~',
            'c',
            'o',
            'n',
            't',
            'a',
            'i',
            'n',
            's',
            '~',
            '0',
          ].join())
        ]),
    Mode(begin: "[a-zA-Z]\\w*::", keywords: {
      "keyword": [
        'int',
        'float',
        'while',
        'private',
        'char',
        'char8_t',
        'char16_t',
        'char32_t',
        'catch',
        'import',
        'module',
        'export',
        'virtual',
        'operator',
        'sizeof',
        'dynamic_cast|10',
        'typedef',
        'const_cast|10',
        'const',
        'for',
        'static_cast|10',
        'union',
        'namespace',
        'unsigned',
        'long',
        'volatile',
        'static',
        'protected',
        'bool',
        'template',
        'mutable',
        'if',
        'public',
        'friend',
        'do',
        'goto',
        'auto',
        'void',
        'enum',
        'else',
        'break',
        'extern',
        'using',
        'asm',
        'case',
        'typeid',
        'wchar_tshort',
        'reinterpret_cast|10',
        'default',
        'double',
        'register',
        'explicit',
        'signed',
        'typename',
        'try',
        'this',
        'switch',
        'continue',
        'inline',
        'delete',
        'alignas',
        'alignof',
        'constexpr',
        'consteval',
        'constinit',
        'decltype',
        'concept',
        'co_await',
        'co_return',
        'co_yield',
        'requires',
        'noexcept',
        'static_assert',
        'thread_local',
        'restrict',
        'final',
        'override',
        'atomic_bool',
        'atomic_char',
        'atomic_schar',
        'atomic_uchar',
        'atomic_short',
        'atomic_ushort',
        'atomic_int',
        'atomic_uint',
        'atomic_long',
        'atomic_ulong',
        'atomic_llong',
        'atomic_ullong',
        'new',
        'throw',
        'return',
        'and',
        'and_eq',
        'bitand',
        'bitor',
        'compl',
        'not',
        'not_eq',
        'or',
        'or_eq',
        'xor',
        'xor_eq',
      ].join(),
      "built_in": [
        'std',
        'string',
        'wstring',
        'cin',
        'cout',
        'cerr',
        'clog',
        'stdin',
        'stdout',
        'stderr',
        'stringstream',
        'istringstream',
        'ostringstream',
        'auto_ptr',
        'deque',
        'list',
        'queue',
        'stack',
        'vector',
        'map',
        'set',
        'bitset',
        'multiset',
        'multimap',
        'unordered_set',
        'unordered_map',
        'unordered_multiset',
        'unordered_multimap',
        'array',
        'shared_ptr',
        'abort',
        'terminate',
        'abs',
        'acos',
        'asin',
        'atan2',
        'atan',
        'calloc',
        'ceil',
        'cosh',
        'cos',
        'exit',
        'exp',
        'fabs',
        'floor',
        'fmod',
        'fprintf',
        'fputs',
        'free',
        'frexp',
        'fscanf',
        'future',
        'isalnum',
        'isalpha',
        'iscntrl',
        'isdigit',
        'isgraph',
        'islower',
        'isprint',
        'ispunct',
        'isspace',
        'isupper',
        'isxdigit',
        'tolower',
        'toupper',
        'labs',
        'ldexp',
        'log10',
        'log',
        'malloc',
        'realloc',
        'memchr',
        'memcmp',
        'memcpy',
        'memset',
        'modf',
        'pow',
        'printf',
        'putchar',
        'puts',
        'scanf',
        'sinh',
        'sin',
        'snprintf',
        'sprintf',
        'sqrt',
        'sscanf',
        'strcat',
        'strchr',
        'strcmp',
        'strcpy',
        'strcspn',
        'strlen',
        'strncat',
        'strncmp',
        'strncpy',
        'strpbrk',
        'strrchr',
        'strspn',
        'strstr',
        'tanh',
        'tan',
        'vfprintf',
        'vprintf',
        'vsprintf',
        'endl',
        'initializer_list',
        'unique_ptr',
        '_Bool',
        'complex',
        '_Complex',
        'imaginary',
        '_Imaginary',
      ].join(),
      "literal": [
        'true',
        'false',
        'nullptr',
        'NULL',
      ].join()
    }),
    Mode(
        className: "class",
        beginKeywords: "class struct",
        end: "[{;:]",
        contains: [
          Mode(begin: "<", end: ">", contains: [Mode(self: true)]),
          TITLE_MODE
        ])
  ],
);
