// GENERATED CODE - DO NOT MODIFY BY HAND

import '../src/mode.dart';
import '../src/common_modes.dart';

final nimrod = Mode(refs: {}, aliases: [
  "nim"
], keywords: {
  "keyword": [
    'a',
    'd',
    'd',
    'r',
    ' ',
    'a',
    'n',
    'd',
    ' ',
    'a',
    's',
    ' ',
    'a',
    's',
    'm',
    ' ',
    'b',
    'i',
    'n',
    'd',
    ' ',
    'b',
    'l',
    'o',
    'c',
    'k',
    ' ',
    'b',
    'r',
    'e',
    'a',
    'k',
    ' ',
    'c',
    'a',
    's',
    'e',
    ' ',
    'c',
    'a',
    's',
    't',
    ' ',
    'c',
    'o',
    'n',
    's',
    't',
    ' ',
    'c',
    'o',
    'n',
    't',
    'i',
    'n',
    'u',
    'e',
    ' ',
    'c',
    'o',
    'n',
    'v',
    'e',
    'r',
    't',
    'e',
    'r',
    ' ',
    'd',
    'i',
    's',
    'c',
    'a',
    'r',
    'd',
    ' ',
    'd',
    'i',
    's',
    't',
    'i',
    'n',
    'c',
    't',
    ' ',
    'd',
    'i',
    'v',
    ' ',
    'd',
    'o',
    ' ',
    'e',
    'l',
    'i',
    'f',
    ' ',
    'e',
    'l',
    's',
    'e',
    ' ',
    'e',
    'n',
    'd',
    ' ',
    'e',
    'n',
    'u',
    'm',
    ' ',
    'e',
    'x',
    'c',
    'e',
    'p',
    't',
    ' ',
    'e',
    'x',
    'p',
    'o',
    'r',
    't',
    ' ',
    'f',
    'i',
    'n',
    'a',
    'l',
    'l',
    'y',
    ' ',
    'f',
    'o',
    'r',
    ' ',
    'f',
    'r',
    'o',
    'm',
    ' ',
    'g',
    'e',
    'n',
    'e',
    'r',
    'i',
    'c',
    ' ',
    'i',
    'f',
    ' ',
    'i',
    'm',
    'p',
    'o',
    'r',
    't',
    ' ',
    'i',
    'n',
    ' ',
    'i',
    'n',
    'c',
    'l',
    'u',
    'd',
    'e',
    ' ',
    'i',
    'n',
    't',
    'e',
    'r',
    'f',
    'a',
    'c',
    'e',
    ' ',
    'i',
    's',
    ' ',
    'i',
    's',
    'n',
    'o',
    't',
    ' ',
    'i',
    't',
    'e',
    'r',
    'a',
    't',
    'o',
    'r',
    ' ',
    'l',
    'e',
    't',
    ' ',
    'm',
    'a',
    'c',
    'r',
    'o',
    ' ',
    'm',
    'e',
    't',
    'h',
    'o',
    'd',
    ' ',
    'm',
    'i',
    'x',
    'i',
    'n',
    ' ',
    'm',
    'o',
    'd',
    ' ',
    'n',
    'i',
    'l',
    ' ',
    'n',
    'o',
    't',
    ' ',
    'n',
    'o',
    't',
    'i',
    'n',
    ' ',
    'o',
    'b',
    'j',
    'e',
    'c',
    't',
    ' ',
    'o',
    'f',
    ' ',
    'o',
    'r',
    ' ',
    'o',
    'u',
    't',
    ' ',
    'p',
    'r',
    'o',
    'c',
    ' ',
    'p',
    't',
    'r',
    ' ',
    'r',
    'a',
    'i',
    's',
    'e',
    ' ',
    'r',
    'e',
    'f',
    ' ',
    'r',
    'e',
    't',
    'u',
    'r',
    'n',
    ' ',
    's',
    'h',
    'l',
    ' ',
    's',
    'h',
    'r',
    ' ',
    's',
    't',
    'a',
    't',
    'i',
    'c',
    ' ',
    't',
    'e',
    'm',
    'p',
    'l',
    'a',
    't',
    'e',
    ' ',
    't',
    'r',
    'y',
    ' ',
    't',
    'u',
    'p',
    'l',
    'e',
    ' ',
    't',
    'y',
    'p',
    'e',
    ' ',
    'u',
    's',
    'i',
    'n',
    'g',
    ' ',
    'v',
    'a',
    'r',
    ' ',
    'w',
    'h',
    'e',
    'n',
    ' ',
    'w',
    'h',
    'i',
    'l',
    'e',
    ' ',
    'w',
    'i',
    't',
    'h',
    ' ',
    'w',
    'i',
    't',
    'h',
    'o',
    'u',
    't',
    ' ',
    'x',
    'o',
    'r',
    ' ',
    'y',
    'i',
    'e',
    'l',
    'd',
  ].join(),
  "literal": [
    's',
    'h',
    'a',
    'r',
    'e',
    'd',
    ' ',
    'g',
    'u',
    'a',
    'r',
    'd',
    'e',
    'd',
    ' ',
    's',
    't',
    'd',
    'i',
    'n',
    ' ',
    's',
    't',
    'd',
    'o',
    'u',
    't',
    ' ',
    's',
    't',
    'd',
    'e',
    'r',
    'r',
    ' ',
    'r',
    'e',
    's',
    'u',
    'l',
    't',
    ' ',
    't',
    'r',
    'u',
    'e',
    ' ',
    'f',
    'a',
    'l',
    's',
    'e',
  ].join(),
  "built_in": [
    'i',
    'n',
    't',
    ' ',
    'i',
    'n',
    't',
    '8',
    ' ',
    'i',
    'n',
    't',
    '1',
    '6',
    ' ',
    'i',
    'n',
    't',
    '3',
    '2',
    ' ',
    'i',
    'n',
    't',
    '6',
    '4',
    ' ',
    'u',
    'i',
    'n',
    't',
    ' ',
    'u',
    'i',
    'n',
    't',
    '8',
    ' ',
    'u',
    'i',
    'n',
    't',
    '1',
    '6',
    ' ',
    'u',
    'i',
    'n',
    't',
    '3',
    '2',
    ' ',
    'u',
    'i',
    'n',
    't',
    '6',
    '4',
    ' ',
    'f',
    'l',
    'o',
    'a',
    't',
    ' ',
    'f',
    'l',
    'o',
    'a',
    't',
    '3',
    '2',
    ' ',
    'f',
    'l',
    'o',
    'a',
    't',
    '6',
    '4',
    ' ',
    'b',
    'o',
    'o',
    'l',
    ' ',
    'c',
    'h',
    'a',
    'r',
    ' ',
    's',
    't',
    'r',
    'i',
    'n',
    'g',
    ' ',
    'c',
    's',
    't',
    'r',
    'i',
    'n',
    'g',
    ' ',
    'p',
    'o',
    'i',
    'n',
    't',
    'e',
    'r',
    ' ',
    'e',
    'x',
    'p',
    'r',
    ' ',
    's',
    't',
    'm',
    't',
    ' ',
    'v',
    'o',
    'i',
    'd',
    ' ',
    'a',
    'u',
    't',
    'o',
    ' ',
    'a',
    'n',
    'y',
    ' ',
    'r',
    'a',
    'n',
    'g',
    'e',
    ' ',
    'a',
    'r',
    'r',
    'a',
    'y',
    ' ',
    'o',
    'p',
    'e',
    'n',
    'a',
    'r',
    'r',
    'a',
    'y',
    ' ',
    'v',
    'a',
    'r',
    'a',
    'r',
    'g',
    's',
    ' ',
    's',
    'e',
    'q',
    ' ',
    's',
    'e',
    't',
    ' ',
    'c',
    'l',
    'o',
    'n',
    'g',
    ' ',
    'c',
    'u',
    'l',
    'o',
    'n',
    'g',
    ' ',
    'c',
    'c',
    'h',
    'a',
    'r',
    ' ',
    'c',
    's',
    'c',
    'h',
    'a',
    'r',
    ' ',
    'c',
    's',
    'h',
    'o',
    'r',
    't',
    ' ',
    'c',
    'i',
    'n',
    't',
    ' ',
    'c',
    's',
    'i',
    'z',
    'e',
    ' ',
    'c',
    'l',
    'o',
    'n',
    'g',
    'l',
    'o',
    'n',
    'g',
    ' ',
    'c',
    'f',
    'l',
    'o',
    'a',
    't',
    ' ',
    'c',
    'd',
    'o',
    'u',
    'b',
    'l',
    'e',
    ' ',
    'c',
    'l',
    'o',
    'n',
    'g',
    'd',
    'o',
    'u',
    'b',
    'l',
    'e',
    ' ',
    'c',
    'u',
    'c',
    'h',
    'a',
    'r',
    ' ',
    'c',
    'u',
    's',
    'h',
    'o',
    'r',
    't',
    ' ',
    'c',
    'u',
    'i',
    'n',
    't',
    ' ',
    'c',
    'u',
    'l',
    'o',
    'n',
    'g',
    'l',
    'o',
    'n',
    'g',
    ' ',
    'c',
    's',
    't',
    'r',
    'i',
    'n',
    'g',
    'a',
    'r',
    'r',
    'a',
    'y',
    ' ',
    's',
    'e',
    'm',
    'i',
    's',
    't',
    'a',
    't',
    'i',
    'c',
  ].join()
}, contains: [
  Mode(className: "meta", begin: "{\\.", end: "\\.}", relevance: 10),
  Mode(
      className: "string",
      begin: "[a-zA-Z]\\w*\"",
      end: "\"",
      contains: [Mode(begin: "\"\"")]),
  Mode(className: "string", begin: "([a-zA-Z]\\w*)?\"\"\"", end: "\"\"\""),
  QUOTE_STRING_MODE,
  Mode(className: "type", begin: "\\b[A-Z]\\w+\\b", relevance: 0),
  Mode(className: "number", relevance: 0, variants: [
    Mode(begin: "\\b(0[xX][0-9a-fA-F][_0-9a-fA-F]*)('?[iIuU](8|16|32|64))?"),
    Mode(begin: "\\b(0o[0-7][_0-7]*)('?[iIuUfF](8|16|32|64))?"),
    Mode(begin: "\\b(0(b|B)[01][_01]*)('?[iIuUfF](8|16|32|64))?"),
    Mode(begin: "\\b(\\d[_\\d]*)('?[iIuUfF](8|16|32|64))?")
  ]),
  HASH_COMMENT_MODE
]);
